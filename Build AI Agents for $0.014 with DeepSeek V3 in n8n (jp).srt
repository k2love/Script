1
00:00:00,206 --> 00:00:03,566
今日はn8nでDeepSeek v3を使う方法について説明します。

2
00:00:03,800 --> 00:00:07,740
GPT-4oやClaude 3.5 Sonnetといったモデルを使うよりも、はるかに安価です。

3
00:00:08,426 --> 00:00:10,072
まず、DeepSeek v3について簡単に説明します。

4
00:00:10,308 --> 00:00:12,341
DeepSeek v3は、最近リリースされたオープンソースモデルです。

5
00:00:12,426 --> 00:00:15,046
現存する他のオープンソースモデルよりも優れた性能を発揮します。

6
00:00:15,320 --> 00:00:17,572
また、最先端のクローズドソースモデルである

7
00:00:17,999 --> 00:00:19,825
GPT-4oにも引けを取らない性能を誇ります。

8
00:00:20,195 --> 00:00:23,766
私はモデル、ファインチューニング、トレーニングなどの専門家ではありません。

9
00:00:24,072 --> 00:00:25,842
ですが、いくつかのグラフを使って説明します。

10
00:00:25,936 --> 00:00:27,842
また、技術レポートへのリンクも概要欄に貼っておきますので、

11
00:00:27,929 --> 00:00:29,711
ご自身で確認してみてください。

12
00:00:30,371 --> 00:00:32,732
この青い部分がDeepSeekです。

13
00:00:32,863 --> 00:00:36,760
Llama、GPT、Claude 3.5といった他のモデルも見られます。

14
00:00:37,087 --> 00:00:40,115
DeepSeekはこれら6つの指標すべてで、他のモデルより優れています。

15
00:00:40,420 --> 00:00:43,088
では、なぜ私がこの動画を作成し、皆さんがこの動画をクリックしたのでしょうか？

16
00:00:43,161 --> 00:00:43,960
それは価格です。

17
00:00:44,140 --> 00:00:48,158
この緑色の部分を見ると、100万トークンあたり0.014ドルであることが分かります。

18
00:00:48,365 --> 00:00:52,787
2ドル程度の投資で、本当に長い間使える量です。

19
00:00:53,240 --> 00:00:55,317
先ほどお話しした技術レポートに含まれている、もう一つのグラフをお見せします。

20
00:00:55,437 --> 00:00:57,180
これは「干し草の山から針を探す」テストです。

21
00:00:57,440 --> 00:00:59,276
ご覧の通り、全体が緑色で表示されています。

22
00:00:59,301 --> 00:01:01,680
つまり、すべての項目で10点満点中10点を獲得したということです。

23
00:01:01,946 --> 00:01:06,237
これは、DeepSeek v3がコンテキストの長さを処理するのに非常に優れていることを示しています。

24
00:01:06,637 --> 00:01:09,428
すべての内容を理解し、他のモデルのように

25
00:01:09,646 --> 00:01:12,501
情報を見落とすことがないということです。

26
00:01:12,820 --> 00:01:15,144
DeepSeek v3の興味深い点は、

27
00:01:15,328 --> 00:01:17,384
混合エキスパートモデル（Mixture of Experts）を採用していることです。

28
00:01:17,503 --> 00:01:19,853
すべてのパラメータに対して一つのモデルを使うのではなく、

29
00:01:20,251 --> 00:01:23,656
特定の分野に対する専門知識に基づいて、

30
00:01:24,028 --> 00:01:27,200
複数のサブモデルを選択的に活用する方式です。

31
00:01:27,458 --> 00:01:31,040
繰り返しになりますが、私もすべての技術的な内容を完璧に理解しているわけではありません。

32
00:01:31,240 --> 00:01:33,152
詳細は技術レポートをご覧ください。

33
00:01:33,492 --> 00:01:36,855
これは、私がDeepSeek v3を推奨したり、使用を勧めたりするものではありません。

34
00:01:36,929 --> 00:01:40,720
もちろん、DeepSeek v3のようなモデルにデータを入力する際には注意が必要です。

35
00:01:41,040 --> 00:01:44,105
私は、私が知っている事実とn8nへの接続方法、

36
00:01:44,456 --> 00:01:47,555
そして、実際に使ってみた感想をお伝えしたかっただけです。

37
00:01:47,882 --> 00:01:49,160
では、n8nに移りましょう。

38
00:01:49,720 --> 00:01:53,522
今日は、DeepSeek v3をn8nに接続する2つの方法を紹介します。

39
00:01:53,739 --> 00:01:56,804
1つ目は、AIエージェントの頭脳、つまりチャットモデルとして接続する方法です。

40
00:01:57,045 --> 00:01:58,171
AIエージェントのチャットモデルとして使用するのです。

41
00:01:58,540 --> 00:02:01,462
ここでは、OpenAIのチャットモデルに接続しているように見えますが、

42
00:02:01,620 --> 00:02:03,274
詳しく見ると、実際には

43
00:02:03,323 --> 00:02:07,107
OpenRouterのベースURLを使用して、DeepSeekチャットに接続しています。

44
00:02:07,320 --> 00:02:08,466
これが1つ目の方法です。

45
00:02:09,140 --> 00:02:12,167
2つ目の方法は、DeepSeek v3を独立したノードとして使う方法です。

46
00:02:12,354 --> 00:02:14,294
OpenAIのメッセージとモデルノードのようにです。

47
00:02:14,699 --> 00:02:17,087
ここでは、DeepSeekにPOSTリクエストを送信し、

48
00:02:17,358 --> 00:02:20,247
情報を渡して応答を受け取る方式です。

49
00:02:20,386 --> 00:02:24,000
では、この2つの方法を簡単に試した後、実際にどのように設定するのかを説明します。

50
00:02:24,360 --> 00:02:25,500
まず、この方法から試してみましょう。

51
00:02:26,360 --> 00:02:29,340
ご覧の通り、DeepSeekにPOSTリクエストを送信しています。

52
00:02:29,544 --> 00:02:31,604
設定方法は後ほど詳しく説明します。

53
00:02:31,720 --> 00:02:34,780
ここでは、「次のトピックに関するFacebookの投稿を作成して」というリクエストを送信しています。

54
00:02:35,132 --> 00:02:37,280
トピックは動的に設定され、

55
00:02:37,595 --> 00:02:40,646
このノードに入力した値によって決まります。

56
00:02:40,718 --> 00:02:42,832
今は「2025年の健康とフィットネス」に設定されています。

57
00:02:43,200 --> 00:02:44,600
では、実行してみましょう。

58
00:02:45,220 --> 00:02:48,137
DeepSeekにリクエストを送信し、応答を待ちます。

59
00:02:49,147 --> 00:02:55,380
応答は、絵文字とハッシュタグを含む形式のFacebook投稿になります。

60
00:02:55,460 --> 00:02:57,095
ご覧の通り、「健康とフィットネス、未来はここに」というタイトルと、

61
00:02:57,295 --> 00:03:01,100
いくつかの内容があり、最後にはモチベーションを高めるメッセージで締めくくられています。

62
00:03:01,960 --> 00:03:03,344
この部分は分かりにくいかもしれませんが、

63
00:03:03,815 --> 00:03:06,586
OpenAIのメッセージとモデルノードを設定するのと全く同じ方法です。

64
00:03:06,692 --> 00:03:08,119
おそらく皆さんは、すでに何度も試したことがあるでしょう。

65
00:03:08,940 --> 00:03:12,280
ここで、システムロールはこのノードが何をするかを定義するものです。

66
00:03:12,620 --> 00:03:13,970
「あなたは役立つアシスタントです」と設定しました。

67
00:03:14,083 --> 00:03:18,162
そして、ユーザーロールはこのノードに何をさせるか、つまり私たちが望むタスクを定義します。

68
00:03:18,476 --> 00:03:21,728
ここでは、「2025年の健康とフィットネスに関するFacebook投稿の作成」をリクエストしています。

69
00:03:22,174 --> 00:03:24,818
この部分が分かりにくい場合は、このように考えてください。

70
00:03:24,952 --> 00:03:29,860
OpenAIでは通常、複数のメッセージを設定します。システムロールとユーザーロールがあります。

71
00:03:29,960 --> 00:03:32,420
ここでは、「役立つアシスタント」、「Facebook投稿の作成」と設定しました。

72
00:03:32,680 --> 00:03:35,220
そして、この2つはほぼ同じように動作します。

73
00:03:35,440 --> 00:03:38,829
違いをお見せするために、完了するまで待ちます。

74
00:03:38,969 --> 00:03:42,064
この部分は完了するまで待ってから、違いをお見せします。

75
00:03:42,506 --> 00:03:44,166
完了しました。これは4oを使った結果です。

76
00:03:46,220 --> 00:03:47,629
そして、この結果は、

77
00:03:47,927 --> 00:03:51,840
別のモデルを使ったため少し異なりますが、Facebook投稿という同じ目的を持っています。

78
00:03:52,760 --> 00:03:56,387
では、上の例を実行してみましょう。

79
00:03:56,514 --> 00:03:58,677
この例はDeepSeek v3に接続されています。

80
00:03:59,837 --> 00:04:02,660
DeepSeek v3に接続して、同じリクエストをしてみましょう。

81
00:04:03,060 --> 00:04:05,785
Facebook投稿の作成

82
00:04:06,733 --> 00:04:10,212
2025年の健康とフィットネス

83
00:04:10,752 --> 00:04:12,320
そして...

84
00:04:12,527 --> 00:04:14,431
資格情報を接続していませんでした。

85
00:04:14,760 --> 00:04:18,285
以前はOpenAIアカウントに接続していましたが、今はDeepSeekの資格情報を使っています。

86
00:04:18,363 --> 00:04:20,587
資格情報の設定方法は後ほど説明します。

87
00:04:20,820 --> 00:04:22,020
これで正常に動作するはずです。

88
00:04:22,415 --> 00:04:24,520
戻って、リクエストを送信してみましょう。

89
00:04:26,440 --> 00:04:29,295
まだOpenAIのチャットモデルのように見えるので、分かりにくいかもしれませんが、

90
00:04:29,358 --> 00:04:33,446
先ほどお話ししたように、OpenRouterでAPIキーを取得するだけで、

91
00:04:33,853 --> 00:04:35,329
すべての設定が完了します。

92
00:04:35,996 --> 00:04:36,549
はい、できました。

93
00:04:36,696 --> 00:04:38,082
これでFacebook投稿が作成されました。

94
00:04:38,820 --> 00:04:39,892
前の例と非常によく似ていて、

95
00:04:40,303 --> 00:04:43,300
最後にハッシュタグがあり、各セクションに絵文字が使われています。

96
00:04:43,463 --> 00:04:44,552
はい、できました。

97
00:04:44,672 --> 00:04:46,880
ここまで、2つの使用例を簡単に見てきました。

98
00:04:48,040 --> 00:04:50,700
では、DeepSeekの設定方法を見ていきましょう。

99
00:04:50,940 --> 00:04:52,527
まず、DeepSeek.comにアクセスします。

100
00:04:52,800 --> 00:04:55,421
この画面でログインするか、アカウントを作成します。

101
00:04:55,660 --> 00:04:57,179
そして、「Access API」をクリックします。

102
00:04:57,686 --> 00:05:01,115
すると、API設定ページに移動します。

103
00:05:01,509 --> 00:05:03,851
私は使用量ページに移動しました。ご覧の通り、私は2ドルをチャージしました。

104
00:05:03,944 --> 00:05:05,479
700万以上のトークンを使用できます。

105
00:05:05,640 --> 00:05:08,320
「API keys」をクリックし、「create new key」をクリックします。

106
00:05:09,606 --> 00:05:10,640
名前を「demo」にします。

107
00:05:10,718 --> 00:05:13,125
そして、生成されたAPIキーをコピーして、安全な場所に貼り付けてください。

108
00:05:13,545 --> 00:05:15,411
後で再び見ることはできないからです。

109
00:05:15,524 --> 00:05:17,383
もちろん、新しいキーを再生成することもできますが、

110
00:05:17,384 --> 00:05:18,766
安全な場所に貼り付けておくのが最善です。

111
00:05:19,680 --> 00:05:22,771
次に、使用可能なトークンがあることを確認します。2ドル程度チャージしてください。

112
00:05:23,020 --> 00:05:25,520
そして、左下の「docs」をクリックします。

113
00:05:25,960 --> 00:05:28,758
すると、APIドキュメントページに移動します。

114
00:05:29,480 --> 00:05:31,862
下にスクロールすると、curlの例があります。

115
00:05:32,281 --> 00:05:33,363
このcurlをコピーします。

116
00:05:33,728 --> 00:05:35,960
あとは、n8nに戻って貼り付けるだけです。

117
00:05:36,240 --> 00:05:38,829
現在、n8nにはDeepSeekの統合機能はありません。

118
00:05:39,229 --> 00:05:41,220
そのため、HTTPリクエストノードを使う必要があります。

119
00:05:42,460 --> 00:05:45,520
「import curl」をクリックし、先ほどコピーしたcurlを貼り付けます。

120
00:05:46,240 --> 00:05:48,406
すると、POSTリクエストに自動的に変更されます。

121
00:05:48,500 --> 00:05:49,805
正しいエンドポイントが入力され、

122
00:05:50,170 --> 00:05:52,516
認証情報を含むヘッダーも自動的に入力されました。

123
00:05:52,896 --> 00:05:55,520
そして、JSONデータもすでに埋め込まれています。非常に簡単です。

124
00:05:55,980 --> 00:05:58,440
次に、先ほどコピーしておいたAPIキーを取得します。

125
00:05:58,840 --> 00:06:00,286
そして、この部分を削除します。

126
00:06:00,393 --> 00:06:02,880
「Bearer」の後にスペースを1つ入れ、APIキーを貼り付けます。

127
00:06:03,120 --> 00:06:07,140
そして、前後に不要なスペースがないように注意してください。

128
00:06:07,540 --> 00:06:08,313
これで正常に動作するはずです。

129
00:06:08,426 --> 00:06:12,680
現在、「役立つアシスタントにhello」というプロンプトを送信しています。

130
00:06:12,940 --> 00:06:14,838
「test step」をクリックし、すべてが正常に動作することを確認してみましょう。

131
00:06:15,320 --> 00:06:18,243
「こんにちは、今日は何をお手伝いしましょうか？」という応答が返ってきました。

132
00:06:18,480 --> 00:06:20,800
「hello」というメッセージに対する応答です。

133
00:06:21,580 --> 00:06:22,331
設定はほぼ完了です。

134
00:06:22,646 --> 00:06:25,609
あとは、このDeepSeekノードに

135
00:06:26,537 --> 00:06:29,662
別のプロンプトを設定することで、より具体的なタスクを実行させることができます。

136
00:06:29,855 --> 00:06:33,955
そして、応答を、望む情報を動的に提供するようにもできます。

137
00:06:34,782 --> 00:06:36,089
では、チャットモデルを設定してみましょう。

138
00:06:36,255 --> 00:06:37,480
このノードは削除します。

139
00:06:37,720 --> 00:06:39,698
OpenAIのチャットモデルノードを追加します。

140
00:06:39,798 --> 00:06:42,155
これは基本的に開かれる方法です。

141
00:06:43,040 --> 00:06:44,363
新しい資格情報を作成する必要があります。

142
00:06:44,443 --> 00:06:46,836
ですが、その前に、OpenRouterですべてを設定する必要があります。

143
00:06:47,242 --> 00:06:48,336
「add option」をクリックします。

144
00:06:48,529 --> 00:06:49,716
「base URL」を追加します。

145
00:06:50,401 --> 00:06:55,260
基本的にはOpenAIを指していますが、これは私たちが取得しようとしているモデルだからです。

146
00:06:55,709 --> 00:06:57,055
では、OpenRouterに移動します。

147
00:06:57,240 --> 00:06:58,240
アカウントを作成します。

148
00:06:58,400 --> 00:07:02,400
そして、DeepSeek v3を探します。

149
00:07:03,880 --> 00:07:05,893
ここで「API」をクリックします。

150
00:07:06,420 --> 00:07:09,860
DeepSeekを取得するために指定するベースURLを探す必要があります。

151
00:07:10,020 --> 00:07:11,860
ここの部分をコピーします。

152
00:07:11,960 --> 00:07:14,580
引用符の中のベースURLをコピーします。

153
00:07:14,880 --> 00:07:15,560
再びn8nに戻ります。

154
00:07:15,900 --> 00:07:17,280
ここに貼り付けます。これで、

155
00:07:18,120 --> 00:07:19,418
OpenRouterのベースURLにアクセスしています。

156
00:07:20,284 --> 00:07:21,960
そして、上部のGPT-4o miniの代わりに、

157
00:07:22,256 --> 00:07:27,827
または、使用している他のモデルの代わりに、「expression」を選択します。既存のモデル名を消去します。

158
00:07:28,620 --> 00:07:29,465
再びOpenRouterに戻ります。

159
00:07:29,760 --> 00:07:30,880
DeepSeek v3のページであることを確認します。

160
00:07:31,700 --> 00:07:33,320
ここの部分をコピーします。

161
00:07:33,660 --> 00:07:37,880
モデル名をコピーします。deepseek/deepseek-chat

162
00:07:38,300 --> 00:07:39,305
そして、ここに貼り付けます。

163
00:07:39,511 --> 00:07:45,180
これで、OpenRouterのURLを通じて、DeepSeekのこのモデルにアクセスしています。

164
00:07:45,560 --> 00:07:46,760
では、

165
00:07:47,136 --> 00:07:48,913
次に進む前に、新しい資格情報を作成する必要があります。

166
00:07:48,986 --> 00:07:51,440
ご覧の通り、私はDeepSeekの資格情報を持っています。新しい資格情報を作成してみましょう。

167
00:07:51,760 --> 00:07:54,480
ですが、まずAPIキーを作成する必要があります。

168
00:07:54,706 --> 00:07:56,066
すでにこのページにいます。

169
00:07:56,180 --> 00:07:57,660
「create API key」をクリックします。

170
00:07:57,980 --> 00:07:59,060
「create a key」をクリックします。

171
00:08:00,240 --> 00:08:01,280
好きな名前を付けます。

172
00:08:02,440 --> 00:08:03,980
そして、先ほどと同様に、

173
00:08:04,360 --> 00:08:05,860
このキーを安全な場所にコピーしておきます。

174
00:08:06,620 --> 00:08:08,760
そして、n8nに戻ります。

175
00:08:09,060 --> 00:08:10,100
「create new credential」をクリックします。

176
00:08:10,300 --> 00:08:12,100
そして、ここにAPIキーを貼り付けます。

177
00:08:12,600 --> 00:08:13,821
その後、「save」をクリックします。

178
00:08:14,379 --> 00:08:18,708
右下に「現在は非公開です」という緑色のメッセージが表示されます。

179
00:08:18,901 --> 00:08:20,187
そして、ここは赤色に変わります。

180
00:08:20,300 --> 00:08:21,749
なぜそうなるのか正確には分かりませんが、

181
00:08:22,194 --> 00:08:24,574
下に緑色のメッセージが表示されれば、接続は完了しています。

182
00:08:25,080 --> 00:08:27,297
バグかもしれませんが、とにかく接続は完了しました。

183
00:08:27,444 --> 00:08:30,920
OpenRouterで作成したAPIキーがここに設定されました。

184
00:08:31,220 --> 00:08:32,915
使用したいDeepSeekモデルを選択し、

185
00:08:32,980 --> 00:08:37,940
OpenRouterがこのモデルにアクセスできるように設定しました。

186
00:08:38,480 --> 00:08:40,258
では、正常に動作するかテストしてみましょう。

187
00:08:40,631 --> 00:08:46,863
チャットを開き、もう一度テストしてみましょう。
今回は「健康とフィットネス」ではなく「スポーツ」に

188
00:08:47,214 --> 00:08:48,200
設定してみましょう。

189
00:08:48,780 --> 00:08:52,380
ご覧の通り、現在はDeepSeekモデルにリクエストを送信しています。

190
00:08:52,500 --> 00:08:53,820
OpenAIのように見えますが。

191
00:08:53,856 --> 00:08:57,800
そして、正常に動作していることが分かります。設定が間違っていれば、すでに失敗しているはずです。

192
00:08:58,040 --> 00:08:59,720
先ほどご覧いただいたように、設定が間違っていると、非常に早く失敗します。

193
00:09:00,180 --> 00:09:01,460
はい、応答が返ってきました。

194
00:09:01,920 --> 00:09:04,480
「革新と情熱が出会う、2025年のスポーツ」というタイトルと共に、

195
00:09:04,680 --> 00:09:06,420
絵文字と内容が表示されています。

196
00:09:06,520 --> 00:09:09,940
そして、ここでは全くプロンプトエンジニアリングをしていませんが、最後にハッシュタグで締めくくられています。

197
00:09:10,140 --> 00:09:12,528
ですが、お話ししたように、ここでは何のプロンプトエンジニアリングも適用していません。

198
00:09:12,855 --> 00:09:16,152
これは私が入力したチャット内容で、その結果です。

199
00:09:16,639 --> 00:09:18,176
今回の動画はここで終わりにします。

200
00:09:18,309 --> 00:09:21,684
それほど複雑な内容ではありませんでしたが、皆さんが実際に試せるように、

201
00:09:21,863 --> 00:09:23,456
これらの機能をどのように活用できるかをお見せしたかったのです。

202
00:09:23,589 --> 00:09:26,917
私は今後、DeepSeekモデルを使って、

203
00:09:27,157 --> 00:09:30,647
もう少し複雑なエージェントを作成し、

204
00:09:30,996 --> 00:09:32,842
様々なツールを使った時にどのように反応するかを見ていく予定です。

205
00:09:33,482 --> 00:09:37,868
DeepSeekに2クレジット、OpenRouterに5クレジットを使ってみてください。

206
00:09:37,981 --> 00:09:40,215
OpenRouterでは様々なモデルを使うことができます。

207
00:09:40,400 --> 00:09:43,801
この程度のクレジットがあれば、十分に長い間使えるはずです。今回の動画が役に立ったなら、いいねを押してください。本当に大きな力になります。

208
00:09:43,888 --> 00:09:45,456
動画が役に立ったなら、いいねをぜひ押してください。本当に大きな力になります。

209
00:09:45,865 --> 00:09:46,511
戻ってくることができて嬉しいです。

210
00:09:46,691 --> 00:09:48,420
皆さん、良いお年を迎えられたことを願っています。

211
00:09:48,728 --> 00:09:51,887
私のチャンネルとAI分野など、すべての面で2025年がどのような年になるか、本当に楽しみです。

212
00:09:52,004 --> 00:09:53,458
AI分野を含め、すべてにおいて、2025年がどのような姿になるのか、本当に楽しみです。

213
00:09:53,812 --> 00:09:56,695
今後数週間、数ヶ月、そして来年にどのような動画を見たいか、コメント欄で教えてください。

214
00:09:56,888 --> 00:09:59,766
今後数週間、数ヶ月、そして来年にどのような動画を見たいか、コメントで教えてください。

215
00:09:59,913 --> 00:10:01,920
最後までご覧いただき、ありがとうございました。
