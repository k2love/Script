1
00:00:00,000 --> 00:00:05,940
With the emergence of things like Chat GPT and GitHub Copilot, coding with AI has become very common now, right?

2
00:00:06,000 --> 00:00:14,557
On YouTube, they keep saying that AI does all the coding, so why are we learning how to code? They say developers are going to become unnecessary. Even computer science majors

3
00:00:14,581 --> 00:00:21,800
and junior developers come to me and ask, "Are we doing the right thing?"

4
00:00:21,840 --> 00:00:24,140
It's natural to have these concerns.

5
00:00:24,260 --> 00:00:27,277
But within big tech companies, the atmosphere seems a bit different.

6
00:00:27,301 --> 00:00:34,237
How is it different? On YouTube, about 95 out of 100 people express the opinion that "AI does all the coding now,

7
00:00:34,261 --> 00:00:37,200
developers are finished, or there is no need to study coding."

8
00:00:37,320 --> 00:00:45,857
But within big tech, about 20 out of 100 people seem to be actively using coding in their daily lives.

9
00:00:45,881 --> 00:00:50,860
And even that's not so much when we're creating business logic but more for what we call simple labor, like

10
00:00:51,040 --> 00:00:59,777
cleaning up the codebase or adding missing unit tests; that's when they're using AI more. We want to use it in more

11
00:00:59,801 --> 00:01:07,920
places but the usability of AI models decreases as the codebase gets bigger, so it's a bit difficult for now.

12
00:01:08,080 --> 00:01:13,440
I feel there's a bit of a difference between the opinions on YouTube and inside big tech.

13
00:01:13,700 --> 00:01:20,920
But what does that mean? When we're doing side projects, coding for fun on our own, or if we're a member of a smaller team,

14
00:01:21,460 --> 00:01:28,060
then using AI models to code can be a very good way to increase our productivity.

15
00:01:28,240 --> 00:01:32,720
So today, let's review tools that help us code with AI.

16
00:01:33,680 --> 00:01:42,277
Okay, the first tool we'll review is using GitHub Copilot in the coding editor VS Code, which is Visual Studio Code.

17
00:01:42,301 --> 00:01:47,927
I also primarily use VS Code when I code, and I've used, but also not used, GitHub Copilot.

18
00:01:47,951 --> 00:01:53,576
First, let's try to make a user sign-up page together.

19
00:01:54,040 --> 00:01:55,960
Creating a user sign-up page...

20
00:01:56,740 --> 00:02:03,240
But it would be good to try making it without AI first, so let's do that first.

21
00:02:03,380 --> 00:02:12,080
The stack I'm using now is Next.js, React, and Tailwind.css. You don't need to know what these are, it doesn't matter.

22
00:02:12,180 --> 00:02:18,840
Here, if I write "Hello World" on the left, it appears on the right like this; the code appears on the right.

23
00:02:18,960 --> 00:02:20,500
That's all you need to know.

24
00:02:20,800 --> 00:02:24,500
First, let's try coding as much as possible without using AI.

25
00:02:24,680 --> 00:02:34,180
So, to create a sign-up, we need to have "Sign up" at the very top.

26
00:02:34,710 --> 00:02:39,220
You can see that on the right, and then after that

27
00:02:45,380 --> 00:02:46,600
we need an email.

28
00:02:48,300 --> 00:03:02,020
We need an email, then a button below, "Sign Up," and these two should be inside a <form>.

29
00:03:02,120 --> 00:03:17,700
Then, here, let's also add a <label> tag, "Email," and a placeholder here too.

30
00:03:20,850 --> 00:03:31,250
Okay, so we have a very simple sign-up <form>, but when you see this for the first time, you're probably thinking "What is this?"

31
00:03:31,390 --> 00:03:39,710
Because there's no styling at all. So, if we do some styling, let's add some padding first. Padding...

32
00:03:42,630 --> 00:03:43,950
Let's add some padding.

33
00:03:44,490 --> 00:03:57,180
Then, let's also add some padding here, and then let's also give it a background color.

34
00:03:57,840 --> 00:04:01,880
Background... Is this right?

35
00:04:02,340 --> 00:04:03,340
Bg?

36
00:04:03,820 --> 00:04:04,920
Yeah, that was it.

37
00:04:05,000 --> 00:04:11,820
Then, let's add some padding, and then should we add a password too?

38
00:04:12,040 --> 00:04:23,420
Password... "Password"... We added a password.

39
00:04:25,240 --> 00:04:27,840
I'd like the "Sign Up" text to be a bit bigger.

40
00:04:32,900 --> 00:04:34,100
Yeah, it's a bit bigger now.

41
00:04:34,180 --> 00:04:39,860
Then, let's also add some padding... some padding here.

42
00:04:40,040 --> 00:04:48,900
Okay, this is a very simple sign-up form we made without AI.

43
00:04:49,100 --> 00:04:57,100
If you enter "money@gmail.com", password "12341234" and click "Sign Up", you will be signed up.

44
00:04:57,280 --> 00:05:00,220
But right now, nothing happens when you click this button.

45
00:05:00,800 --> 00:05:02,700
So let's just do this much...

46
00:05:02,900 --> 00:05:06,280
Now, shall we try using some AI? Right?

47
00:05:06,400 --> 00:05:07,700
Let's commit first...

48
00:05:12,620 --> 00:05:21,620
So, here's how to use AI: first, select all this, press command-I, and Copilot will pop up like this.

49
00:05:21,740 --> 00:05:26,420
It says GPT-4 here, and you can also change the model like this.

50
00:05:26,540 --> 00:05:27,820
You can change the model.

51
00:05:27,940 --> 00:05:31,077
Now, it asks what you want to ask Copilot to do.

52
00:05:31,101 --> 00:05:34,140
Then, I'll say "Make this prettier."

53
00:05:34,240 --> 00:05:35,860
Because you can see it's not very pretty right now.

54
00:05:35,980 --> 00:05:41,780
"Make this sign-off form a lot prettier with Tailwind CSS"

55
00:05:42,100 --> 00:05:44,880
You can do it in Korean, but I'm comfortable with English, so I'll do it in English.

56
00:05:45,200 --> 00:05:47,320
Let's see how it changes it.

57
00:05:48,700 --> 00:05:50,580
It's adding some styling.

58
00:05:50,880 --> 00:05:53,220
It's adding a bunch, let's see how it is.

59
00:05:53,340 --> 00:05:57,680
You can click the Accept button, or press command-Enter.

60
00:05:58,060 --> 00:06:04,500
Okay, if you save, you can see a very pretty sign-up form has been created.

61
00:06:04,600 --> 00:06:09,760
One more thing we need to do is that the "Sign Up" button isn't doing anything right now, right?

62
00:06:09,880 --> 00:06:13,400
So, can we add that functionality?

63
00:06:13,460 --> 00:06:19,020
So that when we click "Sign Up," it actually inserts a user record into the database. Right?

64
00:06:19,140 --> 00:06:20,500
Let's ask again.

65
00:06:20,680 --> 00:06:26,160
"When update the code so that when you click..."

66
00:06:26,920 --> 00:06:28,680
"When you submit the form..."

67
00:06:30,120 --> 00:06:32,500
"Actually call an API endpoint."

68
00:06:33,540 --> 00:06:39,880
When the sign-up button is clicked, call an API service and create a user record.

69
00:06:42,720 --> 00:06:48,240
But we don't have an API service now, so assume that there is an API service.

70
00:06:53,550 --> 00:06:55,010
If we do that...

71
00:06:56,890 --> 00:06:58,550
It's adding state.

72
00:06:59,730 --> 00:07:07,010
Added API endpoint... and updated everything below with the code. Right?

73
00:07:07,130 --> 00:07:08,170
We have an error.

74
00:07:08,290 --> 00:07:14,530
Looking at this error message, I see, "Ah, this requires useClient in Next.js."

75
00:07:15,450 --> 00:07:17,030
"It's because there's no useClient."

76
00:07:17,230 --> 00:07:22,690
Looking at it, it's working... So if you enter "hello world..."

77
00:07:24,770 --> 00:07:31,527
when you click this button... this API's handleSubmit function...

78
00:07:31,551 --> 00:07:34,970
You can see that it automatically calls the API.

79
00:07:35,210 --> 00:07:36,530
But one thing that's lacking here.

80
00:07:36,590 --> 00:07:39,810
Usually when you sign up, you type your password twice, right?

81
00:07:40,050 --> 00:07:44,170
We should have one more form input... So let's ask it to fix that.

82
00:07:44,910 --> 00:07:45,910
Here...

83
00:07:47,150 --> 00:07:48,550
I'll ask again.

84
00:07:48,670 --> 00:07:51,830
"This is... This is a sign of form."

85
00:07:52,270 --> 00:07:55,290
"But there is only one password input."

86
00:07:55,570 --> 00:07:58,490
"Add one more password confirmation input."

87
00:07:59,710 --> 00:08:02,610
Add one more input field for password confirmation.

88
00:08:02,670 --> 00:08:06,110
Then it'll automatically add a "Password Confirmation" field.

89
00:08:06,230 --> 00:08:14,110
And if we accept and save it, you can see that password confirmation is also there. Right?

90
00:08:14,330 --> 00:08:21,967
But one more thing that I don't like is that... if I'm already a member, I should go to the login page instead of signing up here...

91
00:08:21,991 --> 00:08:23,930
but there is no link for that. Right?

92
00:08:24,070 --> 00:08:26,530
So, let's ask it to add that too.

93
00:08:26,710 --> 00:08:27,750
Let's ask it to add it.

94
00:08:28,330 --> 00:08:31,266
"Create a link to the login page."

95
00:08:31,290 --> 00:08:43,410
"So that if I'm already a user... then I can click the link... to go to that page."

96
00:08:45,250 --> 00:08:48,390
Login link... We could add it ourselves, but it's annoying...

97
00:08:49,130 --> 00:08:52,230
Then it goes through the code... and goes, "Oh!"

98
00:08:52,310 --> 00:08:53,830
"I can put it here."

99
00:08:53,890 --> 00:08:56,651
It's interesting that it automatically added "Already a member?"

100
00:08:56,970 --> 00:08:57,970
Then...

101
00:08:58,290 --> 00:08:59,970
If you do this...

102
00:09:01,290 --> 00:09:02,850
It wrote the code wrong.

103
00:09:03,070 --> 00:09:04,070
Because...

104
00:09:04,890 --> 00:09:11,990
In Next.js, you can't put an <a> tag inside a link component but it did it, so... It's not perfect. Not yet.

105
00:09:12,030 --> 00:09:15,050
So, I'll just fix this part separately.

106
00:09:21,460 --> 00:09:23,100
If I fix it separately..."Already a member?"

107
00:09:23,220 --> 00:09:24,220
"Log in."

108
00:09:24,380 --> 00:09:27,260
Okay, so where does this go when I click it?

109
00:09:27,580 --> 00:09:29,680
When I click it, it goes to the login page...

110
00:09:30,620 --> 00:09:32,137
But we don't have a login page. Right?

111
00:09:32,161 --> 00:09:33,340
Then again...

112
00:09:34,020 --> 00:09:38,740
Can we ask Copilot to make a login page for us?

113
00:09:38,860 --> 00:09:39,960
Then...

114
00:09:40,940 --> 00:09:41,940
This time, we're going to...

115
00:09:42,820 --> 00:09:45,600
Instead of chatting with Copilot inside the file...

116
00:09:46,160 --> 00:09:49,320
Let's try using the "edit with copilot" tool.

117
00:09:49,480 --> 00:09:50,600
Okay, then...

118
00:09:50,820 --> 00:09:55,020
Let's put the current sign-up page in the working set.

119
00:09:56,240 --> 00:09:59,200
It says we're adding context to this task.

120
00:09:59,260 --> 00:10:04,640
Then... we have the sign-up page, but we don't have a login page.

121
00:10:04,860 --> 00:10:06,280
The login page...

122
00:10:06,760 --> 00:10:13,280
The path is "app/login/page.tsx"...

123
00:10:13,880 --> 00:10:18,116
Create it following the coding style of the sign-up page.

124
00:10:18,140 --> 00:10:19,140
Let's try that.

125
00:10:19,680 --> 00:10:22,140
Then, if we send the request...

126
00:10:23,580 --> 00:10:27,420
It automatically tries to make something similar to a login page?

127
00:10:27,480 --> 00:10:30,580
So if we go there, you can see it working hard...

128
00:10:31,700 --> 00:10:32,700
It's creating it.

129
00:10:35,900 --> 00:10:39,140
Then we wait until it's all done and...

130
00:10:39,820 --> 00:10:41,060
Accept it...

131
00:10:41,740 --> 00:10:51,140
And if we save, you can see that a login page has been created, and if you click the sign-up link there, you'll see that the sign-up works as well.

132
00:10:52,010 --> 00:10:53,440
It works well.

133
00:10:53,600 --> 00:11:00,057
But one more thing that I don't like here is... what do I do if I lose my password here...

134
00:11:00,081 --> 00:11:01,260
There's no way to do that.

135
00:11:01,320 --> 00:11:02,820
There's no way to find it.

136
00:11:03,000 --> 00:11:08,181
So, here, let's chat with the login page file again...

137
00:11:08,500 --> 00:11:11,880
"add a way to reset password."

138
00:11:12,780 --> 00:11:13,780
I'll do it in Korean.

139
00:11:14,720 --> 00:11:18,640
Add a way to reset the password.

140
00:11:19,800 --> 00:11:20,800
If I do that...

141
00:11:23,540 --> 00:11:24,540
Now...

142
00:11:24,680 --> 00:11:26,840
It goes through the existing lines...

143
00:11:28,660 --> 00:11:30,240
And if you look below, "Ah!"

144
00:11:30,420 --> 00:11:31,940
"We can add the reset here."

145
00:11:32,120 --> 00:11:39,200
So, if we do this and save, you can see that a link to reset the password has also been added.

146
00:11:39,420 --> 00:11:46,380
Like you saw when I was coding earlier, when I do frontend coding, if the codebase isn't big,

147
00:11:46,440 --> 00:11:49,360
then I basically just do the coding very roughly.

148
00:11:49,880 --> 00:11:56,577
Then, I add basic styling or things I missed, for example, like this...

149
00:11:56,601 --> 00:12:00,900
"Password Confirmation" or something like that needs to be added back in,

150
00:12:00,980 --> 00:12:05,320
then I usually use AI like this to try to avoid doing the coding myself as much as possible.

151
00:12:05,380 --> 00:12:12,357
That way, I can write more code in a shorter time. But, like you saw at the beginning...

152
00:12:12,381 --> 00:12:14,400
The code sometimes isn't perfect.

153
00:12:14,580 --> 00:12:21,317
When that happens, I look at the code and fix the bug myself, or use a better model...

154
00:12:21,341 --> 00:12:25,295
and try it again, or tell the AI "This bug popped up, so fix your code yourself."

155
00:12:25,319 --> 00:12:29,780
I try to use AI as much as possible.

156
00:12:30,480 --> 00:12:33,400
Next, we'll look at an editor called Cursor.

157
00:12:33,540 --> 00:12:36,480
Cursor is an editor that is a fork of VSCode.

158
00:12:36,600 --> 00:12:44,397
Here, a "fork" means taking the codebase of an open-source project as is, then adding the features you want to add to it,

159
00:12:44,421 --> 00:12:51,797
and creating a new codebase. That's called forking. So, being a forked codebase of VSCode means

160
00:12:51,821 --> 00:12:54,940
it's very similar, but let's look at what the differences are.

161
00:12:55,140 --> 00:12:56,557
It's a very simple sign-up form.

162
00:12:56,581 --> 00:13:00,440
Let's take this code and ask it to "make it pretty" again.

163
00:13:00,580 --> 00:13:02,840
The method for using it is very similar.

164
00:13:02,880 --> 00:13:05,921
We press Command-K, and this time...

165
00:13:06,900 --> 00:13:08,160
Should we do it in Korean?

166
00:13:08,320 --> 00:13:15,860
"Make the sign-up form I'm looking at much prettier."

167
00:13:15,980 --> 00:13:19,860
Here, the model is GPT-4, but

168
00:13:20,300 --> 00:13:22,180
you can also change the model here.

169
00:13:22,400 --> 00:13:24,980
Let's use the same one for now.

170
00:13:26,860 --> 00:13:37,140
If you look, you can see that it changes it like this, and if you accept, you can see that it made it similarly.

171
00:13:37,260 --> 00:13:43,100
Nicely... The style is a bit different, but it's okay with me. And what did we ask it to do again?

172
00:13:43,220 --> 00:13:48,220
Now, we need to make the sign-up button work properly.

173
00:13:48,650 --> 00:13:58,360
So, when the sign-up button is clicked, call the API service and actually create user information.

174
00:13:59,000 --> 00:14:02,980
However, since we don't have an API service yet...

175
00:14:04,240 --> 00:14:06,160
Just mark it.

176
00:14:07,400 --> 00:14:08,680
If we do that...

177
00:14:11,000 --> 00:14:13,600
Yeah, it's also adding State like before.

178
00:14:16,420 --> 00:14:17,820
It fixed the code...

179
00:14:18,000 --> 00:14:21,240
Now it added the code like this.

180
00:14:22,820 --> 00:14:25,421
Yeah. If I save... there's a bug.

181
00:14:25,460 --> 00:14:27,000
The bug from before is still there, right?

182
00:14:27,060 --> 00:14:36,520
So if we add "useClient", it's fixed, and if you look, there's another bug, it didn't use type.

183
00:14:36,560 --> 00:14:39,800
This is TypeScript but it didn't use type, so add type where it needs it.

184
00:14:39,900 --> 00:14:41,960
Then I'll ask it to do that.

185
00:14:42,940 --> 00:14:49,420
A few types are missing, add type where it's needed.

186
00:14:50,380 --> 00:14:51,820
If I do that...

187
00:14:52,380 --> 00:14:57,160
It automatically adds type and it works fine.

188
00:14:57,380 --> 00:15:02,260
Let's also try asking it to add a password.

189
00:15:02,380 --> 00:15:08,180
Then here, "Add a password confirmation form field."

190
00:15:11,540 --> 00:15:17,660
Yeah. It added a State again and added password confirmation.

191
00:15:17,880 --> 00:15:20,357
Now, if you want to ask something about the code here,

192
00:15:20,381 --> 00:15:27,820
select the code you want to ask about and press Command-L and a chat window will pop up like this.

193
00:15:27,920 --> 00:15:29,300
Okay, so here, what...

194
00:15:29,880 --> 00:15:33,300
"Why are there two fields here?"

195
00:15:33,920 --> 00:15:34,920
If you ask...

196
00:15:36,560 --> 00:15:40,400
The reason to use two password fields in the sign-up form is this.

197
00:15:40,640 --> 00:15:41,680
It will come up like that.

198
00:15:41,960 --> 00:15:54,400
Then, if you select everything and ask, "Should I add a link to the login page?"

199
00:15:54,520 --> 00:16:01,060
It'll say, "Yes, adding a link is a good idea. Please add it."

200
00:16:01,160 --> 00:16:08,020
And things like that. This is a feature in Copilot too, but Cursor also supports it well.

201
00:16:09,650 --> 00:16:11,480
So then, what we did earlier,

202
00:16:11,560 --> 00:16:14,640
"What do I need to do to add a file for the login page?"

203
00:16:14,820 --> 00:16:20,580
It's similar, but if you press Command-I, this thing called Composer will pop up.

204
00:16:20,660 --> 00:16:26,180
This is similar to the "Copilot Edit" tool you saw in GitHub Copilot earlier.

205
00:16:26,390 --> 00:16:43,200
Here, you can just say, "Following the coding style of this sign-up page, create a login page in the 'app/login/page.tsx' path."

206
00:16:43,930 --> 00:16:50,060
If you do that, you can see that I haven't joined the "Cursor Pro" membership.

207
00:16:50,160 --> 00:16:57,561
The reason I haven't joined is that, like you saw earlier, Copilot and Cursor have very similar functions, the UX is almost the same,

208
00:16:57,585 --> 00:17:04,260
and even both support multiple models.

209
00:17:04,480 --> 00:17:16,577
But there's one thing that Cursor does better than Copilot, and that's that if you go to settings and then model, you can use the OpenAI API,

210
00:17:16,601 --> 00:17:21,436
or API keys like an Anthropic API key or another service provider's API key, and only pay for what you've used.

211
00:17:21,460 --> 00:17:25,540
and only pay for what you've used.

212
00:17:25,660 --> 00:17:34,877
So, instead of paying the service provider who provides the Cursor editor, I would pay for my usage of the OpenAI model if I'm going to use it,

213
00:17:34,901 --> 00:17:41,240
and if I'm going to use the Anthropic API model, then I'll only pay for my usage of the Anthropic model.

214
00:17:41,560 --> 00:17:51,640
So, usually, even if you code very actively, it would be hard to use more than 50 cents or so.

215
00:17:51,820 --> 00:17:56,662
But if a monthly membership fee is around $10 or $20, it could be a more economical method,

216
00:17:56,686 --> 00:18:01,360
depending on how much coding you actually do.

217
00:18:01,540 --> 00:18:06,524
If I'm asked, "Which one would you use between these two coding editors?"

218
00:18:06,548 --> 00:18:10,760
I would probably just use Copilot with VS Code.

219
00:18:10,900 --> 00:18:13,700
There are two main reasons. The first reason is reliability.

220
00:18:13,820 --> 00:18:16,520
Microsoft is making VS Code,

221
00:18:16,960 --> 00:18:25,140
and Cursor is forked from VS Code, so I think that Microsoft is going to be a bit better at combining a coding editor and a model,

222
00:18:25,220 --> 00:18:32,100
and there's the issue of reliability of not using my data in a weird way.

223
00:18:32,660 --> 00:18:35,780
And the second reason is that there is no difference in UI UX.

224
00:18:35,900 --> 00:18:44,340
When Cursor came out, there was a big difference in UI UX compared to using Copilot in VS Code.

225
00:18:44,420 --> 00:18:46,400
So people were saying "Wow, Cursor..."

226
00:18:46,960 --> 00:18:51,280
"If you're going to use AI, then Cursor is much better than using Copilot in VS Code."

227
00:18:51,440 --> 00:19:02,297
But VS Code has caught up a lot, and as you can see now, whether you use Copilot in VS Code or AI in Cursor, there isn't really much

228
00:19:02,321 --> 00:19:10,777
difference in convenience, so I think it's better to just use VS Code, because when VS Code

229
00:19:10,801 --> 00:19:16,700
is updated, Cursor might not be able to keep up, since it's a forked version. Right?

230
00:19:16,960 --> 00:19:19,980
So, I think "Ah, it's better to just keep using the editor I usually use."

231
00:19:20,100 --> 00:19:21,960
That's the thought I have.

232
00:19:22,120 --> 00:19:26,020
There are many more AI tools other than Cursor or VS Code, actually.

233
00:19:26,060 --> 00:19:34,577
There are some from Codium, or some that you can use by adding an extension to VS Code, or even by adding a local LLM model, but

234
00:19:34,601 --> 00:19:39,900
the most common one that you can use right now is either Cursor or Copilot.

235
00:19:40,000 --> 00:19:43,240
And if you don't want to pay $10 a month,

236
00:19:43,320 --> 00:19:46,337
and just want to pay for the API for what you use,

237
00:19:46,361 --> 00:19:49,900
then in that case, Cursor can be a good alternative. Got it?

238
00:19:50,140 --> 00:19:58,080
Okay, so today, we took a look at coding using AI together. In the next video, we'll talk more about AI coding.

239
00:19:58,320 --> 00:19:59,420
See you in the next video.