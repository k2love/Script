1
00:00:00,400 --> 00:00:05,420
Hello and welcome to video number
three of the beginner course of n8n.

2
00:00:05,720 --> 00:00:09,539
In this video we'll be
covering the node in n8n

3
00:00:09,540 --> 00:00:13,021
which is the building block
of all of your workflows.

4
00:00:14,100 --> 00:00:17,959
Let's start off by looking
into what an n8n node is

5
00:00:17,960 --> 00:00:21,900
and the different types and
categories of n8n nodes.

6
00:00:23,320 --> 00:00:27,181
The node is really the
atom of n8n and every

7
00:00:27,182 --> 00:00:31,200
workflow is built by
connecting consecutive nodes.

8
00:00:31,640 --> 00:00:34,880
There are three main
categories of nodes.

9
00:00:35,440 --> 00:00:41,080
Entry points which are going to be
your triggers, functions that allow you to

10
00:00:41,081 --> 00:00:47,000
transform, filter, or format data, and
exit points that are going to be your

11
00:00:47,001 --> 00:00:49,450
apps or applications, as we
mentioned before. If you're not

12
00:00:49,474 --> 00:00:51,880
ready for the n8n workflow,
then this video is for you.

13
00:00:51,881 --> 00:00:55,960
In n8n, you will find them grouped
by type when adding them to the canvas,

14
00:00:56,260 --> 00:01:02,320
triggers, actions in app, data
transformation like filter, flow,

15
00:01:02,620 --> 00:01:04,900
files, and advanced nodes.

16
00:01:05,480 --> 00:01:08,620
Here we have an example
of the Google Sheets node.

17
00:01:10,700 --> 00:01:14,480
When you open n8n, you
start on an empty canvas.

18
00:01:14,780 --> 00:01:18,480
This is where we will be adding
our nodes to build our workflows.

19
00:01:19,080 --> 00:01:23,083
We can click on the add
first step or the plus button

20
00:01:23,084 --> 00:01:28,060
at the top right of our
screen to add the first node.

21
00:01:29,820 --> 00:01:33,824
In this case, because
it is the first node of our

22
00:01:33,825 --> 00:01:37,561
workflow, we are prompted
to add a trigger node.

23
00:01:37,800 --> 00:01:41,980
There are the same triggers that
we mentioned in the first videos.

24
00:01:42,820 --> 00:01:47,308
By clicking the on app
event option, we will see a

25
00:01:47,309 --> 00:01:50,560
list of applications that
can be used to trigger.

26
00:01:50,561 --> 00:01:54,875
For now, we can start
by launching the workflow

27
00:01:54,876 --> 00:01:59,940
manually and therefore
selecting the manually trigger.

28
00:02:02,040 --> 00:02:05,687
For all following nodes,
we will have the list

29
00:02:05,688 --> 00:02:08,660
of different types of
nodes as you can see here.

30
00:02:09,120 --> 00:02:13,720
Instead of scrolling through the list,
you can also start typing the name of the

31
00:02:13,721 --> 00:02:17,779
node or application that you want
to use to access it quickly. In the

32
00:02:17,803 --> 00:02:21,860
other examples already shown, you
can also use the node Senior When

33
00:02:21,861 --> 00:02:25,412
selecting the node, you will
sometimes be prompted to

34
00:02:25,413 --> 00:02:29,320
pick a specific action from
the list of available options.

35
00:02:29,660 --> 00:02:32,100
This is called the operation.

36
00:02:32,740 --> 00:02:37,360
Here, we can see the Google
Sheets node has different

37
00:02:37,361 --> 00:02:39,704
interactions such as append or
update row, and so on. Once the node

38
00:02:39,728 --> 00:02:42,000
is active, the canvas automatically
akes on the desired action,

39
00:02:42,001 --> 00:02:45,700
such as clear shield, create
sheet, delete sheet, etc.

40
00:02:47,820 --> 00:02:54,460
And here from the optimal andappend job,
we will see that the Area is We can click

41
00:02:54,461 --> 00:02:59,293
the play button to execute
the node as well as common

42
00:02:59,294 --> 00:03:03,860
options like duplicating,
renaming, deleting, etc.

43
00:03:06,300 --> 00:03:09,520
Double-clicking the
node will open its settings.

44
00:03:09,820 --> 00:03:13,100
This is where we can set
up the node for execution.

45
00:03:13,540 --> 00:03:15,980
There are two types
of configurations.

46
00:03:16,240 --> 00:03:21,820
The parameters, which are the default
view when double-clicking on a node.

47
00:03:21,940 --> 00:03:27,580
These are going to be specific
to a given node and operation.

48
00:03:28,120 --> 00:03:35,480
For example, selecting which spreadsheet
and sheet we want to read data from when

49
00:03:35,481 --> 00:03:40,500
we select the get rows operation in
Google Sheets, as you can see here.

50
00:03:41,500 --> 00:03:47,500
The gear on the top right gives us
access to advanced settings that are node

51
00:03:47,501 --> 00:03:53,060
independent, like notes, or
visuals, and execution settings.

52
00:03:53,400 --> 00:03:56,940
We will cover these in
the advanced course.

53
00:03:58,780 --> 00:04:02,182
At the top of the parameters
for each app node,

54
00:04:02,183 --> 00:04:05,781
there will be an option
to set your credentials.

55
00:04:06,200 --> 00:04:08,880
This is a very important
concept to understand.

56
00:04:09,400 --> 00:04:13,840
This setting is how we authenticate
to different applications and services,

57
00:04:14,040 --> 00:04:17,880
as mentioned in the
APIs and webhooks video.

58
00:04:18,720 --> 00:04:24,680
They are saved at an instance level to
make sure workflow building is efficient

59
00:04:24,681 --> 00:04:30,195
and can be shared to
specific users or workflows to

60
00:04:30,196 --> 00:04:34,220
ensure security around
the accessibility of apps.

61
00:04:34,480 --> 00:04:40,300
You can prevent specific people from
having access to specific credentials.

62
00:04:41,920 --> 00:04:48,620
To the left and right of the nodes
parameters, we have input and output data.

63
00:04:50,120 --> 00:04:55,560
This makes it easy to understand what data
is being read as the input by the node,

64
00:04:55,680 --> 00:04:59,180
and what is the
associated output data.

65
00:05:00,120 --> 00:05:04,080
Using an example Google Sheet,
we can see three main views.

66
00:05:04,880 --> 00:05:11,181
This is going to be the table view with the
different columns and values associated.

67
00:05:13,020 --> 00:05:18,360
JSON view where we can see
the output data as key value pairs.

68
00:05:18,700 --> 00:05:21,820
This is going to be the
topic of our next video.

69
00:05:23,480 --> 00:05:27,860
And schema view where we
can see all the different keys

70
00:05:27,861 --> 00:05:32,160
from the input and an example
of corresponding values.

71
00:05:34,280 --> 00:05:37,640
Let's jump into Eniden and
see what all of this looks like.

72
00:05:39,820 --> 00:05:41,520
Here we are in Eniden.

73
00:05:41,740 --> 00:05:45,700
And we can see an empty
canvas for our workflow.

74
00:05:46,660 --> 00:05:48,660
Just as we saw in the slides.

75
00:05:49,520 --> 00:05:52,783
Let's run through adding
a Google Sheet reading its

76
00:05:52,784 --> 00:05:57,480
data and looking through
the different views in Eniden.

77
00:05:58,480 --> 00:06:03,460
So here we have a Google
Sheet that contains demo data.

78
00:06:03,700 --> 00:06:10,280
We have a column with first names,
a column with last names, emails,

79
00:06:10,540 --> 00:06:11,900
and company names.

80
00:06:12,240 --> 00:06:15,334
We can also see here that
we have two sheets, one

81
00:06:15,335 --> 00:06:18,840
sheet named data and one
sheet with company info.

82
00:06:20,360 --> 00:06:24,420
In Eniden, we can
click add first step.

83
00:06:24,600 --> 00:06:30,320
And as mentioned in the video,
choose to trigger this workflow manually.

84
00:06:31,320 --> 00:06:38,740
From here, we can either using the
plus button up here, select the next node,

85
00:06:38,940 --> 00:06:43,903
or clicking the plus button
here, we can add a node

86
00:06:43,904 --> 00:06:47,680
that is connected
automatically to this trigger.

87
00:06:49,520 --> 00:06:54,140
Here I can choose action in
app and look for Google Sheets.

88
00:06:54,440 --> 00:06:59,240
But it would be faster if
we just type Google Sheets.

89
00:07:00,340 --> 00:07:03,520
When I click on Google
Sheets, I have access to all

90
00:07:03,521 --> 00:07:06,580
of the different actions
and triggers associated.

91
00:07:07,160 --> 00:07:14,140
In this case, we're going to get a row
in the sheets that one or multiple rows in

92
00:07:14,141 --> 00:07:17,980
the sheet because we want to
read data from the Google Sheet.

93
00:07:19,740 --> 00:07:24,780
Here, we can see that I already
have a credential that is set up.

94
00:07:26,780 --> 00:07:32,060
These are as mentioned
earlier, saved at an instance level.

95
00:07:32,820 --> 00:07:34,820
But let me just
create a new one.

96
00:07:34,880 --> 00:07:39,148
For the example, if I
create a new credential,

97
00:07:39,149 --> 00:07:42,701
I can choose to use
OAuth or a service account.

98
00:07:42,880 --> 00:07:46,178
In this case, OAuth will
allow me to very easily and

99
00:07:46,202 --> 00:07:49,500
quickly connect. And really
quickly connect to Google.

100
00:07:49,520 --> 00:07:50,520
Read data from the sheet.

101
00:07:50,600 --> 00:07:52,900
So here, I'm going
to sign in with Google.

102
00:08:00,260 --> 00:08:02,020
And now I'm signed in.

103
00:08:02,520 --> 00:08:11,160
This means that Eniden has access to all
of the data in my Google Sheets account.

104
00:08:11,480 --> 00:08:16,400
And now I can choose the
resource I want to act upon.

105
00:08:16,680 --> 00:08:19,240
So this is going to be a
sheet within a document.

106
00:08:19,720 --> 00:08:22,320
And the operation is
going to be get rows.

107
00:08:23,160 --> 00:08:26,833
If you decide you want to
to change your operation, you

108
00:08:26,834 --> 00:08:30,260
can also select from a list
of given operations here.

109
00:08:31,660 --> 00:08:36,080
And now I'm going to select which
document and sheet I want to read.

110
00:08:36,240 --> 00:08:42,540
So here I have multiple options, I
can either enter the URL or the ID.

111
00:08:42,880 --> 00:08:47,200
And the easiest here is going to
be obviously to select from the list.

112
00:08:47,300 --> 00:08:49,980
So here I can choose
Eniden demo data.

113
00:08:50,400 --> 00:08:53,749
And then from again,
the list of sheets, I

114
00:08:53,750 --> 00:08:57,440
have the data sheet and
the company info sheet.

115
00:08:57,640 --> 00:09:02,260
So I'm going to select the
data and execute the node.

116
00:09:04,740 --> 00:09:10,500
Here we can see, to the right, we
have all of the information from the

117
00:09:10,501 --> 00:09:15,740
Google Sheet, as well as a column
that contains data on the row number.

118
00:09:17,060 --> 00:09:23,940
All of the information that was in the
sheet is now available here in Eniden.

119
00:09:23,941 --> 00:09:27,780
fields that did not have
values are going to be empty.

120
00:09:28,140 --> 00:09:33,225
This is as we saw earlier,
the table view, which is

121
00:09:33,226 --> 00:09:36,660
going to be very useful
when reading Google Sheets.

122
00:09:36,840 --> 00:09:44,880
We also have the JSON view with each
line corresponding to one JSON here.

123
00:09:45,060 --> 00:09:51,920
Again, we'll cover JSON in our next video,
and the scheme view, as mentioned earlier.

124
00:09:53,400 --> 00:09:57,800
From here, we can also
access the node settings.

125
00:09:58,400 --> 00:10:02,380
As mentioned a little bit earlier, these
are going to be node independent.

126
00:10:02,660 --> 00:10:08,420
So whichever node you are accessing these
settings of these will always be the same.

127
00:10:08,800 --> 00:10:14,040
We have settings that
depend on what the type of...

128
00:10:19,120 --> 00:10:22,600
From here, we can also
access the node settings.

129
00:10:22,940 --> 00:10:26,720
As mentioned earlier, the node
settings are node independent.

130
00:10:27,160 --> 00:10:32,220
So whichever node you are currently editing,
you will have the same node settings.

131
00:10:32,660 --> 00:10:39,500
We have settings that pertain to
the execution and output of the node.

132
00:10:39,620 --> 00:10:45,800
So the node can always output data or
execute once and not the number of times

133
00:10:45,801 --> 00:10:56,180
of from here, we can also
access the node settings.

134
00:10:56,680 --> 00:11:00,880
As mentioned previously, the
node settings are node independent.

135
00:11:01,200 --> 00:11:03,317
And so no matter which
workflow you are editing,

136
00:11:03,318 --> 00:11:06,061
you will have access
to the same settings.

137
00:11:06,260 --> 00:11:09,980
So these settings have to do
with the node execution or output.

138
00:11:10,400 --> 00:11:15,740
So here we can always output
data or decide to only execute once.

139
00:11:16,260 --> 00:11:19,040
And also retry on fail.

140
00:11:19,280 --> 00:11:22,760
This can be very
useful when using apps.

141
00:11:22,761 --> 00:11:26,360
That behind the scenes
actually use API's.

142
00:11:26,480 --> 00:11:31,760
And then we have error settings,
what do we do in case of an error notes,

143
00:11:31,980 --> 00:11:37,260
and if we want to display notes in the
flow, adding a note to explain what the

144
00:11:37,261 --> 00:11:42,620
workflow does helps a lot when
trying to understand workflows.

145
00:11:44,920 --> 00:11:50,140
Here, under the sheets settings,
we have additional options.

146
00:11:50,240 --> 00:11:56,140
So I could decide, for example,
to filter if I want the email to be a

147
00:11:56,141 --> 00:11:59,540
specific value or the first
name to be a specific value.

148
00:12:00,240 --> 00:12:05,480
And we have additional options such
as data location, output formatting,

149
00:12:05,620 --> 00:12:09,680
or how to deal with filter
that has multiple matches.

150
00:12:12,880 --> 00:12:16,700
Many nodes are going to have additional
settings that are available here at the

151
00:12:16,701 --> 00:12:20,980
bottom, additional filters
or options, for example.

152
00:12:22,880 --> 00:12:28,200
Here, we can also see the input data,
which in this case is going to be empty

153
00:12:28,201 --> 00:12:32,300
because we are using the
when clicking test workflow.

154
00:12:33,640 --> 00:12:38,320
But when we're going to be building
our workflows, to the left, we're going to

155
00:12:38,321 --> 00:12:42,762
have our input data in again,
the table JSON or schema

156
00:12:42,802 --> 00:12:46,280
view, and to the right, we're
going to have our output data.

157
00:12:47,380 --> 00:12:51,229
Thank you for listening to
the third video of the NNN

158
00:12:51,230 --> 00:12:55,820
beginner course where we
covered nodes and how to use them.

159
00:12:56,080 --> 00:13:02,460
In the next video, we'll dive deeper
into what kind of data NNN nodes use,

160
00:13:02,760 --> 00:13:09,440
allowing us to understand the input
and output of the nodes, and how this data

161
00:13:09,441 --> 00:13:15,601
flows between different nodes, with
our final goal being to create workflows.

162
00:13:15,680 --> 00:13:17,080
See you in the next video.

