1
00:00:00,000 --> 00:00:05,057
오늘은 다음을 약속하는 AI 기반 코드 편집기인 Cursor AI를 살펴봅니다.

2
00:00:05,081 --> 00:00:07,420
개발을 훨씬 더 쉽게 만들어줍니다.

3
00:00:07,680 --> 00:00:09,640
지난 몇 주 동안 이 기능을 사용했습니다.

4
00:00:09,740 --> 00:00:13,497
꽤 흥미로워서 간단한 튜토리얼을 만들어서 공유하고 싶었습니다.

5
00:00:13,521 --> 00:00:17,557
제가 배운 내용과 적용 가능한 몇 가지 모범 사례, 특히

6
00:00:17,581 --> 00:00:19,520
만약 당신이 초보 프로그래머이고 당신이

7
00:00:19,544 --> 00:00:21,660
이러한 AI 도구를 사용해 본 적이 없는 경우.

8
00:00:21,720 --> 00:00:25,420
어떻게 작동하는지, 어떻게 하면 최상의 결과를 얻을 수 있는지 정확히 알지 못합니다.

9
00:00:25,540 --> 00:00:29,580
그럼 지금부터 커서 AI를 사용하는 방법에 대해 자세히 알아봅시다.

10
00:00:30,100 --> 00:00:32,556
이제 이 시점에서는 여러분이 다운로드했다고 가정하겠습니다.

11
00:00:32,580 --> 00:00:33,820
아직 다운로드하지 않았다면 한 번 시도해 보세요.

12
00:00:33,880 --> 00:00:34,300
무료입니다.

13
00:00:34,440 --> 00:00:38,060
더 많은 기능과 무제한 사용을 원한다면 유료 버전도 있습니다,

14
00:00:38,240 --> 00:00:41,297
하지만 숙련 된 개발자라도 추천합니다.

15
00:00:41,321 --> 00:00:44,137
꽤 멋지고 당신이 어떻게 일해 왔는지 의문을 갖게합니다.

16
00:00:44,161 --> 00:00:46,660
과거에 어떻게 일해왔는지, 그리고 이것이 당신이 전환하고 싶은 것인지에 대한 의문을 갖게 합니다.

17
00:00:47,060 --> 00:00:49,541
어쨌든, 일단 커서 AI를 열면

18
00:00:49,565 --> 00:00:51,960
새 폴더를 여는 것이 좋습니다.

19
00:00:52,080 --> 00:00:55,260
이렇게 하려면 파일로 이동한 다음 폴더를 열면 됩니다.

20
00:00:55,440 --> 00:00:58,620
그런 다음 여기에서 데스크톱에 새 폴더를 만들 수 있습니다.

21
00:00:58,700 --> 00:00:59,620
그리고 열어보세요.

22
00:00:59,680 --> 00:01:03,357
많은 초보자가 실제로 기본 폴더에서 작업하기 때문입니다.

23
00:01:03,381 --> 00:01:06,437
시작하고, 그렇지 않으면 작업을 잃을 수 있다는 것입니다.

24
00:01:06,461 --> 00:01:08,393
폴더 위치가 어디 있는지 알거나

25
00:01:08,417 --> 00:01:10,320
로 돌아가기가 조금 더 어려울 수 있습니다.

26
00:01:10,460 --> 00:01:14,117
이제, 특히 초보자라면 시작하기 전에 다음과 같이 하기를 권장합니다.

27
00:01:14,141 --> 00:01:18,260
제가 보여드릴 기능 중 하나를 사용하여 약간의 계획을 세우는 것입니다.

28
00:01:18,560 --> 00:01:23,680
인공지능은 아주 작고 개별적이며 세부적인 작업을 해결하는 데 가장 효과적입니다.

29
00:01:23,880 --> 00:01:28,757
더 구체적으로 설명할수록 더 많은 컨텍스트와 정보를 제공할 수 있습니다.

30
00:01:28,781 --> 00:01:30,036
작업에 더 많은 맥락과 정보를 제공할수록 더 나은 결과를 얻을 수 있습니다.

31
00:01:30,060 --> 00:01:34,157
할 일 목록 생성하기와 같은 작업을 요청하면 알 수 있습니다.

32
00:01:34,181 --> 00:01:38,057
응용 프로그램을 제공하거나 포트폴리오 웹 사이트를 제공하거나 정말

33
00:01:38,081 --> 00:01:42,957
일반적인 한두 문장 길이의 작업과 매우 다른 결과를 얻을 수 있습니다.

34
00:01:42,981 --> 00:01:44,676
전혀 원하지 않는 결과를 얻을 수 있습니다.

35
00:01:44,700 --> 00:01:48,357
그리고 일단 한 방향으로 가기 시작하면, 그것은 일종의 분기되어 다음과 같은 결과를 가져올 수 있습니다.

36
00:01:48,381 --> 00:01:51,340
사방으로 퍼져나갈 수 있습니다.

37
00:01:51,460 --> 00:01:52,756
그러니 자신이 원하는 것이 무엇인지 확실히 알아두세요.

38
00:01:52,780 --> 00:01:55,240
무엇을 만들고 싶은지 명확한 비전을 가지고 있습니다.

39
00:01:55,340 --> 00:01:58,657
그리고 최소한 몇 가지 메모를 적어두거나 그냥 적어두는 것을 적극 권장합니다.

40
00:01:58,681 --> 00:02:01,857
몇 가지 메모, 심지어 사용자 인터페이스에 대한 그림을 그리는 것도 좋습니다.

41
00:02:01,881 --> 00:02:03,500
최소한의 모습, 왜냐하면 그것은 정말로

42
00:02:03,524 --> 00:02:05,981
이 이 과정을 안내하는 데 도움이 될 것입니다.

43
00:02:06,160 --> 00:02:10,440
어쨌든, 이 시점에서 계획이 있고 무엇을 하고 싶은지 알고 있다고 가정해 봅시다.

44
00:02:10,520 --> 00:02:12,736
그리고 적어도 몇 분 동안은 그것에 대해 생각해 보셨을 겁니다.

45
00:02:12,760 --> 00:02:15,640
여기서 보여드리고 싶은 첫 번째 기능은 작성 기능입니다.

46
00:02:16,080 --> 00:02:18,556
지금 또는 작곡가 기능, 원하는 대로 부르세요.

47
00:02:18,580 --> 00:02:22,997
이제 이 기능을 사용하려면 파일로 이동하여 다음과 같이 설정해야 합니다.

48
00:02:23,021 --> 00:02:27,320
환경설정, 커서 설정으로 이동한 다음 여기에서 기능을 클릭합니다.

49
00:02:28,680 --> 00:02:31,637
아래로 스크롤하면 작곡가가 표시되며 다음과 같이 활성화할 수 있습니다.

50
00:02:31,661 --> 00:02:34,060
활성화를 선택하면 기본적으로 비활성화 된 것 같습니다.

51
00:02:34,200 --> 00:02:35,840
그래서 말씀드리는 겁니다.

52
00:02:35,900 --> 00:02:39,700
자, 이제 그 정보를 얻었으니 Ctrl I을 누르면 됩니다,

53
00:02:39,920 --> 00:02:42,120
그러면 작곡가 보기가 열립니다.

54
00:02:42,280 --> 00:02:44,040
Mac을 사용하는 경우 Command I이 될 것입니다.

55
00:02:44,200 --> 00:02:46,926
이제 실제로 여러 파일을 편집할 수 있습니다.

56
00:02:46,950 --> 00:02:49,920
를 동시에 편집하고 새 파일을 만들 수 있습니다.

57
00:02:50,040 --> 00:02:53,500
그래서 저는 새로운 애플리케이션을 생성할 때 이렇게 시작하길 좋아합니다.

58
00:02:53,840 --> 00:02:56,937
그리고 나서 기능을 크게 변경하고 싶거나 뭔가 중요한 일이 생기면

59
00:02:56,961 --> 00:02:58,423
수많은 다른 애플리케이션에 적용하거나

60
00:02:58,447 --> 00:03:01,000
죄송합니다, 다른 파일이 너무 많아서 이걸 사용하겠습니다.

61
00:03:01,600 --> 00:03:04,616
먼저 제어판을 열어볼게요.

62
00:03:04,640 --> 00:03:05,480
좀 더 커졌네요.

63
00:03:05,540 --> 00:03:06,736
여기서도 이런 게 보입니다.

64
00:03:06,760 --> 00:03:09,220
그리고 제가 원하는 것을 정확히 물어보겠습니다.

65
00:03:09,320 --> 00:03:10,857
자, 여기에 간단한 프롬프트를 작성했습니다,

66
00:03:10,881 --> 00:03:12,481
원하시면 읽어보세요.

67
00:03:12,560 --> 00:03:15,940
하지만 중요한 것은 제가 원하는 것을 정확히 지정하고 있다는 것입니다.

68
00:03:16,020 --> 00:03:20,000
그리고 어떤 프레임워크 언어 등을 사용하길 원하는지 알려주고 있습니다.

69
00:03:20,080 --> 00:03:24,100
잘 모르면 어떤 것을 사용해야 하는지 추천해달라고 요청할 수 있습니다.

70
00:03:24,200 --> 00:03:28,297
하지만 바로 사용하기 전에 약간의 조사를 해보고

71
00:03:28,321 --> 00:03:30,540
임의의 언어나 임의의 프레임워크처럼요.

72
00:03:30,680 --> 00:03:34,657
그리고 실제로 다른 인공지능이나 이 앱 내부의 인공지능에게 물어볼 수도 있습니다.

73
00:03:34,681 --> 00:03:37,897
이봐요, 이런 유형의 응용 프로그램을 만들고 싶은데, 그게 뭐죠?

74
00:03:37,921 --> 00:03:40,682
가장 간단한 방법이 무엇인지 알려주시면 몇 가지 권장 사항을 알려드릴 수 있습니다.

75
00:03:41,100 --> 00:03:44,837
요점은, 저는 자바스크립트 프레임워크인 Express를 사용하고 싶다는 것입니다.

76
00:03:44,861 --> 00:03:48,960
백엔드로, 레시피를 저장하는 데는 제 데이터베이스인 SQLite를 사용하고 싶습니다.

77
00:03:49,180 --> 00:03:53,460
그리고 프론트엔드에는 자바스크립트, HTML, CSS와 Tailwind를 사용하고 싶어요.

78
00:03:53,660 --> 00:03:55,296
자, 이제 여기서 엔터를 누르겠습니다.

79
00:03:55,320 --> 00:03:56,552
그러면 다음과 같이 됩니다.

80
00:03:56,576 --> 00:03:58,780
수많은 다른 파일을 생성하기 시작합니다.

81
00:03:58,840 --> 00:04:02,297
다음과 같은 모든 작업을 수행할 수 없으므로 몇 가지 지침을 제공합니다.

82
00:04:02,321 --> 00:04:04,821
예를 들어 터미널 명령을 실행하지만

83
00:04:04,845 --> 00:04:07,176
의 경우 대부분의 애플리케이션을 생성할 수 있습니다.

84
00:04:07,200 --> 00:04:11,880
좀 더 잘 볼 수 있도록 조금 축소해 보겠습니다.

85
00:04:12,140 --> 00:04:12,540
알았어요.

86
00:04:12,800 --> 00:04:13,980
이제 여기로 돌아가자.

87
00:04:14,420 --> 00:04:19,297
자, 이제 서버가 생성된 것을 볼 수 있습니다.

88
00:04:19,321 --> 00:04:23,180
인덱스, 스타일, 스크립트가 있으니 완료될 때까지 기다리겠습니다.

89
00:04:23,260 --> 00:04:25,006
그리고 나서 우리는 실제로

90
00:04:25,030 --> 00:04:26,980
이 변경 사항이 우리 앱에 적용됩니다.

91
00:04:27,140 --> 00:04:27,780
좋아, 완료되었습니다.

92
00:04:27,960 --> 00:04:31,857
이제 가서 이 모든 파일을 볼 수 있고, 수정 요청을 할 수 있습니다.

93
00:04:31,881 --> 00:04:33,920
내가 원하는 대로 변경할 수 있습니다.

94
00:04:34,060 --> 00:04:38,080
그리고 나서 이 변경 사항을 모두 수락하거나 한 번에 한 파일씩 수락할 수 있습니다.

95
00:04:38,160 --> 00:04:40,949
그래서 저는 모두 수락할 것이고 이것은 다음과 매우 유사합니다.

96
00:04:40,973 --> 00:04:43,281
GitHub 풀 리퀘스트 같은 것에서 하는 것과 매우 유사합니다.

97
00:04:43,420 --> 00:04:45,876
그리고 이 파일들이 생성되는 것을 볼 수 있습니다.

98
00:04:45,900 --> 00:04:47,216
이제 작성기 뷰에서 벗어나 보겠습니다.

99
00:04:47,240 --> 00:04:50,820
이제 인덱스, 스크립트, 스타일, 서버가 생겼습니다.

100
00:04:50,960 --> 00:04:55,077
자, 이것이 컴포저가 생성하는 데 매우 유용한 첫 번째 기능입니다.

101
00:04:55,101 --> 00:05:00,360
더 큰 기능을 많이 사용하지만 때로는 약간 미쳐버릴 수 있습니다.

102
00:05:00,420 --> 00:05:03,640
그리고 그 안에 있는 모든 코드를 검토하는 것도 어렵습니다.

103
00:05:03,760 --> 00:05:06,980
그래서 제가 가장 많이 사용하는 다음 기능을 보여드리겠습니다.

104
00:05:07,100 --> 00:05:08,679
그리고 이것은 일반 채팅의 종류입니다.

105
00:05:08,703 --> 00:05:10,660
보기, 정확히 뭐라고 부르는지 잘 모르겠습니다.

106
00:05:10,700 --> 00:05:14,980
하지만 Ctrl I 또는 Command I을 누르면 이 채팅으로 들어갑니다.

107
00:05:15,120 --> 00:05:18,260
이제 여기에서는 코딩과 관련된 질문을 할 필요가 없습니다.

108
00:05:18,480 --> 00:05:22,040
하지만 코드 베이스의 전체 컨텍스트에 액세스할 수 있습니다.

109
00:05:22,180 --> 00:05:25,620
따라서 특정 파일에 대해 물어보면 해당 파일을 찾을 수 있습니다.

110
00:05:25,700 --> 00:05:29,320
또는 컨텍스트를 지정할 수 있으므로 제가 할 수 있는 일은 누르기만 하면 됩니다.

111
00:05:29,344 --> 00:05:32,101
예를 들어 추가를 누르면 다른 파일을 추가할 수 있습니다.

112
00:05:32,220 --> 00:05:34,269
따라서 내 파일에 대해 질문하고 싶으면

113
00:05:34,293 --> 00:05:36,440
서버 파일에 대해 질문하려면 여기에 서버를 넣으면 됩니다.

114
00:05:36,540 --> 00:05:40,820
이제 웹에서 검색을 요청하거나 이미지를 제공하는 등의 작업도 할 수 있습니다,

115
00:05:41,020 --> 00:05:43,520
다른 문서를 링크할 수 있습니다.

116
00:05:43,880 --> 00:05:47,457
앱 멘션으로 이동하면 PDF 파일을 줄 수 있습니다.

117
00:05:47,481 --> 00:05:51,240
폴더 코드 웹 문서가 너무 많은 옵션이 있는 것처럼 보입니다.

118
00:05:51,340 --> 00:05:54,600
더 많은 컨텍스트를 제공할수록 더 나은 성능을 발휘할 수 있습니다.

119
00:05:54,820 --> 00:05:58,401
그러니 여기에 들어가서 특정 파일을 언급하거나

120
00:05:58,425 --> 00:06:01,400
웹 사이트 등을 언급할 수 있습니다.

121
00:06:01,520 --> 00:06:05,537
예를 들어, 새로운 기능이나 프레임워크 같은 것이 있으면

122
00:06:05,561 --> 00:06:08,288
문서에 연결한 다음, 그 문서가

123
00:06:08,312 --> 00:06:10,440
를 읽게 한 다음 응답을 생성합니다.

124
00:06:10,880 --> 00:06:13,840
자, 이제 서버 내부에서 무언가를 하고 싶다고 가정해 봅시다.

125
00:06:14,000 --> 00:06:17,360
서버라고 말하면 좋지만 추가하고 싶다고 말할 수 있습니다,

126
00:06:17,480 --> 00:06:18,736
예를 들어, 더 많은 레시피를요.

127
00:06:18,760 --> 00:06:20,960
좋아, 좋아.

128
00:06:21,740 --> 00:06:28,260
새로운 레시피를 추가해 주세요. 좀 더 독특하게 만들어 주세요.

129
00:06:28,920 --> 00:06:30,200
좋아요, 그럼 입력해 봅시다.

130
00:06:30,280 --> 00:06:31,320
어떤 결과가 나오는지 봅시다.

131
00:06:31,560 --> 00:06:32,980
자, 여기 코드가 있습니다.

132
00:06:33,100 --> 00:06:37,420
이 코드를 수동으로 복사할 수도 있고, 적용을 누를 수도 있습니다,

133
00:06:37,520 --> 00:06:40,280
실제로 파일 내부가 달라집니다.

134
00:06:40,380 --> 00:06:42,671
따라서 다음과 같이 정확하게 표시되는 것을 볼 수 있습니다.

135
00:06:42,695 --> 00:06:44,880
바로 여기에 추가할 내용을 보여줍니다.

136
00:06:45,000 --> 00:06:48,840
그리고 이것은 채팅 GPT와 같은 것과는 완전히 다릅니다,

137
00:06:48,920 --> 00:06:52,580
기존 코드에 주석을 달거나 샘플 데이터를 삽입하는 것과는 완전히 다릅니다,

138
00:06:52,740 --> 00:06:56,900
이 파일의 일부를 복사해서 파일에 붙여 넣어야 합니다.

139
00:06:57,080 --> 00:06:59,000
여기, 이렇게 하면 됩니다.

140
00:06:59,080 --> 00:07:00,860
이걸 그냥 받아들이면 되겠네요.

141
00:07:00,960 --> 00:07:04,500
이제 여기 안에 더 많은 레시피가 추가되는 것을 볼 수 있습니다.

142
00:07:04,580 --> 00:07:06,810
그리고 만약 이게 마음에 안 들면, 그냥

143
00:07:06,834 --> 00:07:09,300
이 묻기 버튼으로 바로 답장할 수 있습니다.

144
00:07:09,520 --> 00:07:12,200
이제 이 특정 응답을 참조하고 있습니다.

145
00:07:12,460 --> 00:07:14,121
그리고 저는 다음과 같이 말할 수 있습니다.

146
00:07:14,145 --> 00:07:15,920
이 레시피가 마음에 들면 이 레시피로 바꿔주세요.

147
00:07:15,980 --> 00:07:18,700
컨텍스트를 주입하는 아주 빠른 방법입니다.

148
00:07:18,900 --> 00:07:21,407
다시 말하지만, 코딩할 때 컨텍스트는 매우 중요합니다,

149
00:07:21,431 --> 00:07:24,500
가능한 한 많은 정보를 제공하고 싶을 것입니다.

150
00:07:24,860 --> 00:07:26,300
이것이 최고의 답변을 얻는 방법입니다.

151
00:07:26,440 --> 00:07:27,680
이것이 바로 채팅 창입니다.

152
00:07:27,860 --> 00:07:28,600
꽤 직진인 것 같아요.

153
00:07:28,680 --> 00:07:28,920
앞으로 나아가자.

154
00:07:29,040 --> 00:07:30,500
문맥을 언급할 수 있습니다.

155
00:07:30,660 --> 00:07:32,836
채팅하고 싶은 다른 모델을 선택할 수 있습니다.

156
00:07:32,860 --> 00:07:34,160
문서를 연결할 수 있습니다.

157
00:07:34,420 --> 00:07:36,706
그리고 이 얘기를 하는 동안, 실제로

158
00:07:36,730 --> 00:07:39,100
코드베이스를 검색할 수 있는 옵션이 있습니다.

159
00:07:39,200 --> 00:07:42,797
따라서 엔터키를 누르거나 이걸 누르는 기본 채팅을 할 수 있습니다.

160
00:07:42,821 --> 00:07:48,260
버튼을 누르거나, “내 레시피가 어디에 정의되어 있나요?”와 같은 말을 할 수도 있습니다.

161
00:07:48,560 --> 00:07:50,812
특정 코드를 찾고 있다면, 아마도

162
00:07:50,852 --> 00:07:53,216
거대한 코드 베이스에 있는 경우 탐색하기가 다소 어렵습니다.

163
00:07:53,240 --> 00:07:55,532
그리고 이 버튼을 누르면 다음과 같습니다.

164
00:07:55,556 --> 00:07:57,817
실제로는 전체 코드베이스를 검색합니다.

165
00:07:57,841 --> 00:08:00,980
컨트롤+입력 또는 명령+입력을 할 수도 있습니다.

166
00:08:01,220 --> 00:08:04,977
더 큰 코드 베이스에서는 분명히 더 효과적이지만, 이제 다음과 같이 알 수 있습니다.

167
00:08:05,001 --> 00:08:09,060
이 어디에 있는지 알려주고 다른 변수와 파일에 대한 링크를 제공합니다.

168
00:08:09,140 --> 00:08:11,282
그리고 실제로 이것을 클릭하면 다음과 같이 이동할 수 있습니다.

169
00:08:11,382 --> 00:08:14,000
정확히 그 위치로 이동할 수 있다는 점이 매우 흥미롭습니다.

170
00:08:14,140 --> 00:08:16,580
그래서 샘플 레시피로 이동하면 해당 변수로 이동합니다.

171
00:08:16,760 --> 00:08:19,242
파란색으로 표시된 것은 클릭할 수 있으며 실제로

172
00:08:19,266 --> 00:08:21,380
코드 베이스를 탐색하기 쉽습니다.

173
00:08:21,700 --> 00:08:22,060
오케이.

174
00:08:22,120 --> 00:08:23,160
저게 채팅 창입니다.

175
00:08:23,200 --> 00:08:25,940
여기서 할 수 있는 일, 특히 컨텍스트와 관련된 많은 일들이 있습니다.

176
00:08:26,120 --> 00:08:29,260
하지만 이제 제가 이야기하고 싶은 것은 인라인 완성에 관한 것입니다.

177
00:08:29,460 --> 00:08:31,634
코드를 입력하는 동안 예를 들어

178
00:08:31,658 --> 00:08:33,740
우리는 실제로 무언가를 직접 편집하고 싶습니다.

179
00:08:34,060 --> 00:08:37,679
예를 들어 index. Html로 이동하면, 아마도 내가

180
00:08:37,703 --> 00:08:40,700
에 어떤 이유로 다른 선택 상자를 추가하고 싶을 수 있습니다.

181
00:08:41,220 --> 00:08:43,642
그래서 저는 '좋아, 선택'이라고 말한 다음 다음과 같이 표시할 것입니다.

182
00:08:43,666 --> 00:08:46,660
를 입력하자마자 정말 긴 자동 완성이 표시됩니다.

183
00:08:46,700 --> 00:08:48,676
그래서 탭을 누르면 자동으로 완성됩니다.

184
00:08:48,700 --> 00:08:50,660
엔터를 눌러서 이 안으로 들어갈 수 있어요.

185
00:08:50,800 --> 00:08:52,822
이미 여러 가지 옵션이 주어졌어요.

186
00:08:52,846 --> 00:08:56,300
이를 사용하여 코드를 훨씬 빠르게 생성할 수 있습니다.

187
00:08:56,440 --> 00:08:59,940
이것은 제가 이미 가지고 있던 것과 같은 방식이지만, 제가 원한다면,

188
00:09:00,000 --> 00:09:05,037
나는 이것을 바꿀 수 있고 기분 선택보다는 아마도 시간으로 갈 것입니다.

189
00:09:05,061 --> 00:09:07,560
선택 같은 걸로 바꾸면 옵션이 생깁니다.

190
00:09:07,740 --> 00:09:10,000
여기서 또 무엇을 할까요?

191
00:09:10,100 --> 00:09:12,560
아침, 점심, 저녁.

192
00:09:12,980 --> 00:09:13,380
Okay.

193
00:09:13,520 --> 00:09:16,140
여기서 탭을 제대로 눌러보겠습니다.

194
00:09:16,480 --> 00:09:18,800
이걸 안에 넣을 수 있다는 것을 알 수 있습니다.

195
00:09:19,120 --> 00:09:19,520
멋지네요.

196
00:09:19,640 --> 00:09:23,020
이제 여기서 이 코드 블록을 수정하고 싶다고 가정해 봅시다.

197
00:09:23,120 --> 00:09:25,720
이 부분을 강조 표시하면 두 가지 옵션이 있습니다.

198
00:09:25,840 --> 00:09:30,257
채팅을 할 수도 있고, 컨트롤 I을 할 수도 있고, 컨트롤 K을 할 수도 있습니다.

199
00:09:30,281 --> 00:09:32,040
일종의 인라인 편집기를 띄우려고 합니다.

200
00:09:32,680 --> 00:09:36,640
K를 제어하면 이걸로 무엇을 하라는 지시를 내릴 수 있습니다.

201
00:09:36,700 --> 00:09:38,660
이걸 삭제하라고 말할 수도 있죠.

202
00:09:39,500 --> 00:09:42,297
왜 그렇게 해야 하는지 모르겠지만, 할 수 있고, 지금 보시면 알 수 있습니다.

203
00:09:42,321 --> 00:09:45,940
가 차이를 생성하면 이를 받아들이거나 거부할 수 있습니다.

204
00:09:46,060 --> 00:09:52,580
여기로 돌아가서 좀 더 자세한 옵션을 추가해 주세요.

205
00:09:53,040 --> 00:09:53,360
알았어요.

206
00:09:53,460 --> 00:09:54,160
Enter를 누르겠습니다.

207
00:09:54,420 --> 00:09:56,714
그러면 다시 차이를 확인할 수 있습니다.

208
00:09:56,738 --> 00:09:59,080
이른 아침, 아침, 점심 등이 있다는 것을 알 수 있습니다.

209
00:09:59,180 --> 00:09:59,380
오케이.

210
00:09:59,500 --> 00:10:00,500
수락합시다.

211
00:10:00,580 --> 00:10:01,360
여기까지입니다.

212
00:10:01,440 --> 00:10:02,700
이제 선택지가 생겼습니다.

213
00:10:02,780 --> 00:10:06,917
간단히 요약하자면, 대량의 파일을 생성하려면 다음과 같이 생성합니다.

214
00:10:06,941 --> 00:10:09,320
새 파일을 생성하는 것은 큰 기능 변경을 하는 것과 같습니다.

215
00:10:09,500 --> 00:10:11,580
코드의 많은 영역을 건드리게 될 거예요.

216
00:10:11,620 --> 00:10:14,985
그런 다음 컨트롤 I 또는 명령으로 컴포저를 열면.

217
00:10:15,009 --> 00:10:17,800
I로 새 컴포저를 만들거나 기존 컴포저를 사용할 수 있습니다.

218
00:10:17,900 --> 00:10:20,681
그런 다음 다음과 같이 모든 파일을 읽을 수 있습니다.

219
00:10:20,705 --> 00:10:24,160
GitHub 풀 리퀘스트와 같은 방식으로 변경할 수 있습니다.

220
00:10:24,240 --> 00:10:28,317
이제 정말 작은 범위의 타겟팅된 수정을 원한다면 다음과 같이 하면 됩니다.

221
00:10:28,341 --> 00:10:32,200
코드 줄을 강조 표시하고 예를 들어 컨트롤 K를 누르면 됩니다.

222
00:10:32,380 --> 00:10:36,960
코드의 줄에서 바로 이 작업을 수행하면 다른 창이 열립니다,

223
00:10:37,120 --> 00:10:38,600
로 변경할 수 있습니다.

224
00:10:38,740 --> 00:10:40,596
따라서 이것은 다음과 같이 매우 빠르게 변경할 수 있습니다.

225
00:10:40,620 --> 00:10:42,980
원하는 것을 정확히 알고 있을 때 편집기를 사용하는 것과 같습니다.

226
00:10:43,100 --> 00:10:46,557
그리고 만약 당신이 그 중간쯤에 있는, 어쩌면 그것도 아닌 무언가를 원한다면

227
00:10:46,581 --> 00:10:49,640
코드 변경과 관련이 없다면 채팅 창을 열면 됩니다.

228
00:10:49,740 --> 00:10:52,380
이제 여기서 원하는 것은 무엇이든 물어볼 수 있습니다.

229
00:10:52,500 --> 00:10:55,660
변경 사항을 추천하고 직접 적용할 수 있습니다.

230
00:10:55,760 --> 00:10:58,340
예를 들어 코드 설명을 요청할 수도 있습니다.

231
00:10:58,560 --> 00:11:01,480
이 코드를 복사해서 이 안에 붙여넣을 수도 있습니다.

232
00:11:01,660 --> 00:11:05,880
이렇게 하면 컨텍스트가 자동으로 추가되는 것을 볼 수 있습니다,

233
00:11:06,020 --> 00:11:09,500
이 대사를 설명해 주실 수 있나요?

234
00:11:10,320 --> 00:11:10,720
알았어요.

235
00:11:10,860 --> 00:11:12,782
이제 저기로 가서 설명하고

236
00:11:12,806 --> 00:11:15,040
무슨 일이 일어나고 있는지 설명해 주세요.

237
00:11:15,120 --> 00:11:16,620
그래서 채팅 창이 더 커졌어요.

238
00:11:16,860 --> 00:11:19,526
반면 여기서는 변경을 하고 실제로

239
00:11:19,550 --> 00:11:22,201
보다 타겟팅된 접근 방식으로 코드의 섹션을 수정합니다.

240
00:11:22,560 --> 00:11:23,560
멋지네요.

241
00:11:23,600 --> 00:11:26,334
마지막으로 보여드리고 싶은 주요 기능은 다음과 같습니다.

242
00:11:26,358 --> 00:11:29,380
이미지를 사용하여 코드를 생성할 수 있다는 것입니다.

243
00:11:29,500 --> 00:11:30,200
그럼 그렇게 해봅시다.

244
00:11:30,380 --> 00:11:30,720
알았어요.

245
00:11:30,800 --> 00:11:32,613
그래서 여기에 일종의 임의의 이미지를 가져왔습니다.

246
00:11:32,637 --> 00:11:35,280
정말 간단한 로그인 양식 같은 웹에서요.

247
00:11:35,320 --> 00:11:38,817
이제, 당연히 피그마 파일 같은 것을 사용하겠지만, 디자이너가

248
00:11:38,841 --> 00:11:41,478
당신에게 보낼 수 있지만, 요점은 당신이 이미지를 찍을 수 있다는 것입니다.

249
00:11:41,502 --> 00:11:44,340
에 전달하고 이를 기반으로 코드를 생성하도록 할 수 있다는 것입니다.

250
00:11:44,460 --> 00:11:46,100
이제 제가 할 수 있는 일은 이미지를 선택하는 것입니다.

251
00:11:46,200 --> 00:11:46,700
그럼 시작하죠.

252
00:11:46,760 --> 00:11:48,220
바로 여기인 것 같아요.

253
00:11:48,300 --> 00:11:48,980
나타날 거야.

254
00:11:49,060 --> 00:11:56,860
이 양식이 포함된 새 HTML 파일을 만들어 주세요,

255
00:11:57,140 --> 00:12:00,740
다음과 같이 만들어주세요.

256
00:12:00,840 --> 00:12:02,056
어떤 결과가 나오는지 봅시다.

257
00:12:02,080 --> 00:12:05,045
HTML이 생성되었는데, 아래를 눌러보면 다음과 같습니다.

258
00:12:05,069 --> 00:12:09,120
적용을 누르면 내 index.html에 적용하려고 합니다.

259
00:12:09,180 --> 00:12:10,640
이제 새 파일을 원합니다.

260
00:12:10,740 --> 00:12:13,556
채팅에서 이런 종류의 오류가 자주 발생하는 것 중 하나입니다.

261
00:12:13,580 --> 00:12:16,600
컴포저를 사용하지 않으면 새 파일을 만들지 않습니다.

262
00:12:16,840 --> 00:12:18,540
그래서 제가 직접 새 파일을 만들어야 합니다.

263
00:12:18,680 --> 00:12:21,480
그래서 그냥 form.html로 가볼게요.

264
00:12:21,940 --> 00:12:22,300
Okay.

265
00:12:22,380 --> 00:12:23,576
그리고 이걸 적용하겠습니다.

266
00:12:23,600 --> 00:12:25,700
취소를 클릭하고 다시 양식으로 돌아가겠습니다.

267
00:12:25,740 --> 00:12:28,220
양식이 열리면 기본적으로 그 양식을 사용하도록 설정됩니다.

268
00:12:28,360 --> 00:12:32,877
그리고 이제 신청 알림으로 이동하여 form. Html이라고 표시되고 다음과 같이 표시됩니다.

269
00:12:32,901 --> 00:12:35,540
이 나타나면 수락할 수 있습니다.

270
00:12:35,620 --> 00:12:38,120
이제 컨트롤 시프트 Y를 눌러서 수락하겠습니다.

271
00:12:38,240 --> 00:12:39,760
이제 이걸 열어봅시다.

272
00:12:39,840 --> 00:12:41,356
실제로 어떻게 생겼는지 보고 싶어서요.

273
00:12:41,380 --> 00:12:44,920
파일 탐색기에서 양식을 열어 보겠습니다.

274
00:12:45,080 --> 00:12:49,500
이미 만들어져 있다는 것이 꽤 인상적입니다.

275
00:12:49,600 --> 00:12:52,920
다시 이미지로 돌아가서 이 정도일 줄은 몰랐습니다.

276
00:12:53,060 --> 00:12:54,460
이미지를 다시 열어볼게요.

277
00:12:54,660 --> 00:12:56,097
이렇게 이미지가 표시됩니다.

278
00:12:56,121 --> 00:12:58,080
그리고 이것이 우리가 지금 얻은 결과입니다.

279
00:12:58,120 --> 00:12:58,280
그렇군요.

280
00:12:58,360 --> 00:13:01,317
간격에 약간의 문제가 있지만 적어도 이렇게 대각선처럼

281
00:13:01,341 --> 00:13:04,220
줄이 채워져서 안 채워질 거라고 예상했는데요.

282
00:13:04,460 --> 00:13:04,820
Yes.

283
00:13:04,920 --> 00:13:08,380
패딩과 글꼴에 약간의 문제가 있지만 대체로 비슷합니다.

284
00:13:08,580 --> 00:13:09,920
음, 꽤 인상적이네요.

285
00:13:10,020 --> 00:13:12,236
다시 말하지만, 이렇게 좋은 결과가 나올 거라고는 예상하지 못했습니다.

286
00:13:12,260 --> 00:13:13,660
꽤 인상적이었어요.

287
00:13:13,800 --> 00:13:16,371
그리고 전반적으로 커서가 매우 멋졌습니다.

288
00:13:16,395 --> 00:13:18,740
생산성이 확실히 향상되었습니다.

289
00:13:19,140 --> 00:13:21,656
이제 이걸 염두에 두고, 저는 정말

290
00:13:21,680 --> 00:13:24,936
코딩하는 방법을 이미 알고 있기 때문에 효과적으로 사용할 수 있습니다.

291
00:13:24,960 --> 00:13:25,100
그렇군요.

292
00:13:25,200 --> 00:13:28,717
경험이 적은 초보자도 사용할 수 있습니다.

293
00:13:28,741 --> 00:13:33,180
막히면 실제로 아무것도 해내기가 훨씬 더 어려울 것입니다,

294
00:13:33,400 --> 00:13:35,873
시도하는 것은 정말 약간의 악몽입니다.

295
00:13:35,897 --> 00:13:38,760
AI에 무엇이 잘못되었는지 알아내서 파일을 고치려고요.

296
00:13:38,880 --> 00:13:40,832
그리고 저는 종종

297
00:13:40,856 --> 00:13:43,120
직접 뛰어들어 변화를 만들어야 할 때가 많아요.

298
00:13:43,340 --> 00:13:46,317
이제 이 점을 염두에 두고 코딩을 배우고 싶거나 배우고 싶다면

299
00:13:46,341 --> 00:13:50,197
데이터 과학, 머신 러닝에 대해 더 자세히 알아보고 싶으시다면요,

300
00:13:50,221 --> 00:13:53,757
흥미롭고 새롭게 떠오르는 모든 분야를 추천합니다.

301
00:13:53,781 --> 00:13:56,000
오늘 영상의 스폰서인 브릴리언트를 확인해 보세요.

302
00:13:56,500 --> 00:13:59,406
브릴리언트는 수천 명과 함께하면서 배우는 곳입니다.

303
00:13:59,430 --> 00:14:03,000
수학, 데이터 분석, 프로그래밍 및 AI 수업의 수입니다.

304
00:14:03,360 --> 00:14:05,670
첫 번째 원칙 접근 방식을 채택하여 다음을 보장합니다.

305
00:14:05,694 --> 00:14:08,281
각 개념 뒤에 숨은 이유를 이해합니다.

306
00:14:08,440 --> 00:14:12,777
모든 수업은 대화식으로 진행되며, 실습 문제 해결에 참여하게 됩니다.

307
00:14:12,801 --> 00:14:16,040
단순히 강의를 보는 것보다 6배 더 효과적이라는 것이 입증되었습니다.

308
00:14:16,300 --> 00:14:20,377
최고 수준의 교육자, 연구자, 전문가가 개발한 콘텐츠입니다.

309
00:14:20,401 --> 00:14:24,237
MIT, Caltech, Google과 같은 유명 기관에서 개발했습니다.

310
00:14:24,261 --> 00:14:27,476
비판적 사고력 향상을 강조하는 브릴리언트

311
00:14:27,500 --> 00:14:30,240
암기보다는 능동적인 문제 해결을 통해.

312
00:14:30,600 --> 00:14:33,312
특정 과목을 학습하면서 동시에

313
00:14:33,336 --> 00:14:35,261
더 효과적으로 생각할 수 있도록 정신을 훈련합니다.

314
00:14:35,640 --> 00:14:39,717
매일 꾸준히 학습하는 것은 매우 중요하며, Brilliant는 이를 쉽게 도와줍니다.

315
00:14:39,741 --> 00:14:44,097
한 입 크기의 수업으로 단 몇 시간 만에 의미 있는 지식을 습득할 수 있습니다.

316
00:14:44,121 --> 00:14:47,600
분으로, 유휴 화면 시간을 대체하기에 완벽합니다.

317
00:14:47,900 --> 00:14:51,397
또한, 브릴리언트는 포괄적인 컴퓨터 과학을 제공합니다.

318
00:14:51,421 --> 00:14:56,057
및 파이썬 과정뿐만 아니라 완전한 AI 워크샵을 안내하는 광범위한 AI 워크샵을 제공합니다.

319
00:14:56,081 --> 00:14:59,320
실용적인 실습 강의를 통해 초보자부터 전문가까지.

320
00:14:59,600 --> 00:15:04,297
다음 사이트를 방문하여 30일 동안 Brilliant가 제공하는 모든 것을 무료로 체험해 보세요.

321
00:15:04,321 --> 00:15:08,220
brilliant.org를 슬래시하거나 설명에 있는 링크를 클릭하세요.

322
00:15:08,520 --> 00:15:11,520
또한 연간 프리미엄 구독을 20% 할인받을 수 있습니다.
