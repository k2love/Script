1
00:00:00,000 --> 00:00:05,057
오늘은 AI 기반 코드 편집기 커서 AI를 살펴봅니다

2
00:00:05,081 --> 00:00:07,420
개발을 훨씬 더 쉽게 만들어준다고 하네요

3
00:00:07,680 --> 00:00:09,640
지난 몇 주 동안 사용해 봤는데,

4
00:00:09,740 --> 00:00:13,497
꽤 흥미로워서 튜토리얼을 만들어 공유하고 싶었습니다

5
00:00:13,521 --> 00:00:17,557
제가 배운 내용과 적용 가능한 모범 사례를 알려드릴게요

6
00:00:17,581 --> 00:00:21,660
특히 초보 프로그래머나 AI 도구를 처음 사용하는 분들께요

7
00:00:21,720 --> 00:00:25,420
어떻게 작동하는지, 최상의 결과를 얻는 방법이 궁금하셨죠?

8
00:00:25,540 --> 00:00:29,580
지금부터 커서 AI 사용법을 자세히 알아보도록 하겠습니다

9
00:00:30,100 --> 00:00:32,556
커서 AI를 다운로드했다고 가정하고 시작할게요

10
00:00:32,580 --> 00:00:34,300
아직 다운로드하지 않았다면 한번 시도해 보세요. 무료입니다

11
00:00:34,440 --> 00:00:38,060
더 많은 기능이 필요하면 유료 버전도 있습니다

12
00:00:38,240 --> 00:00:41,297
숙련된 개발자에게도 추천해요 정말 멋진 기능이거든요

13
00:00:41,321 --> 00:00:46,660
과거에 어떻게 일했는지,
이걸로 전환하고 싶은지 묻게 될 겁니다

14
00:00:47,060 --> 00:00:49,541
어쨌든, 커서 AI를 열고

15
00:00:49,565 --> 00:00:51,960
새 폴더를 여는 것부터 시작하는 게 좋습니다

16
00:00:52,080 --> 00:00:55,260
파일에서 폴더 열기를 선택하면 됩니다

17
00:00:55,440 --> 00:00:59,620
데스크톱에 새 폴더를 만들고 열어보세요

18
00:00:59,680 --> 00:01:06,437
많은 초보자가 기본 폴더에서 작업하다가,
작업을 잃거나, 폴더 위치를 모를 수 있습니다

19
00:01:06,461 --> 00:01:10,320
되돌아가기 어려울 수 있으니 주의해야 합니다

20
00:01:10,460 --> 00:01:14,117
특히 초보자라면 시작하기 전에 계획을 세우는 걸 추천합니다

21
00:01:14,141 --> 00:01:18,260
제가 보여드릴 기능을 사용해서 약간의 계획을 세워보세요

22
00:01:18,560 --> 00:01:23,680
AI는 작고 개별적이며 세부적인 작업에 가장 효과적입니다

23
00:01:23,880 --> 00:01:30,036
구체적일수록 AI에 더 많은 맥락과 정보를
제공할 수 있고, 더 나은 결과를 얻을 수 있습니다

24
00:01:30,060 --> 00:01:34,157
할 일 목록 생성 같은 작업을 요청할 때를 생각해 보세요

25
00:01:34,181 --> 00:01:38,057
응용 프로그램, 포트폴리오 웹 사이트, 일반적인 작업은

26
00:01:38,081 --> 00:01:42,957
결과가 매우 다를 수 있습니다
전혀 원치 않는 결과가 나올 수도 있죠

27
00:01:42,981 --> 00:01:46,676
한 방향으로 가기 시작하면 사방으로 퍼져나갈 수 있어요

28
00:01:47,060 --> 00:01:52,756
무엇을 만들고 싶은지 명확한 비전을 가지고 메모해 두세요

29
00:01:52,780 --> 00:01:55,240
몇 가지 메모나 UI 그림도 좋습니다

30
00:01:55,340 --> 00:02:03,340
이 과정에 큰 도움이 될 거에요
최소한의 모습이라도 좋습니다

31
00:02:03,524 --> 00:02:05,981
이 과정을 안내하는 데 도움이 될 것이기 때문입니다

32
00:02:06,160 --> 00:02:10,440
계획이 있고 무엇을 하고 싶은지 알고 있다고 가정해 봅시다

33
00:02:10,520 --> 00:02:12,736
적어도 몇 분 동안은 생각해 봤을 겁니다

34
00:02:12,761 --> 00:02:15,641
여기서 보여드리고 싶은 첫 번째 기능은 작성 기능입니다

35
00:02:16,080 --> 00:02:18,556
작곡가 기능이라고도 하죠 원하는 대로 부르세요

36
00:02:18,580 --> 00:02:22,997
이 기능을 사용하려면 파일에서
커서 설정으로 이동해야 합니다

37
00:02:23,021 --> 00:02:27,320
환경설정, 커서 설정에서 기능을 클릭하세요

38
00:02:28,680 --> 00:02:34,060
아래로 스크롤하면 작곡가가 있고, 활성화할
수 있습니다 기본적으로 비활성화되어 있어요

39
00:02:34,200 --> 00:02:35,840
그래서 알려드리는 겁니다

40
00:02:35,900 --> 00:02:39,700
이제 Ctrl I를 누르면 작곡가 보기가 열립니다

41
00:02:39,920 --> 00:02:44,040
맥은 Command I입니다 여러 파일을
동시에 편집하거나 새 파일을 만들 수 있습니다

42
00:02:44,200 --> 00:02:46,926
이제 실제로 여러 파일을 편집할 수 있습니다

43
00:02:46,950 --> 00:02:49,920
동시에 편집하고 새 파일을 만들 수 있습니다

44
00:02:50,040 --> 00:02:53,500
새 애플리케이션을 만들 때 이걸로 시작하는 걸 좋아합니다

45
00:02:53,840 --> 00:02:59,923
기능을 변경하고 싶거나, 다른 파일에
적용하고 싶을 때, 이 기능을 사용하면 편리합니다

46
00:03:01,600 --> 00:03:06,736
먼저 제어판을 열어 좀 더 크게 만들어 볼게요

47
00:03:06,760 --> 00:03:09,220
제가 원하는 것을 정확히 물어보겠습니다

48
00:03:09,320 --> 00:03:12,481
여기에 간단한 프롬프트를 작성했습니다. 읽어보세요

49
00:03:12,560 --> 00:03:15,940
중요한 건 제가 원하는 것을 정확히 지정하는 겁니다

50
00:03:16,020 --> 00:03:20,000
어떤 프레임워크와 언어를 사용할지 알려주고 있습니다

51
00:03:20,080 --> 00:03:24,100
잘 모르겠으면 추천해달라고 요청할 수도 있습니다

52
00:03:24,200 --> 00:03:28,297
하지만 미리 조사를 하고 임의의 언어는 피해야 합니다

53
00:03:28,321 --> 00:03:34,657
이 앱 내부의 AI에게 물어볼 수도 있습니다.
어떤 유형의 응용 프로그램을 만들고 싶다고요

54
00:03:34,681 --> 00:03:40,682
어떤 방법이 가장 간단한지 물어보면,
몇 가지 권장 사항을 알려줄 것입니다

55
00:03:41,100 --> 00:03:48,960
저는 자바스크립트 프레임워크인 Express를 백엔드로
사용하고 싶고, SQLite를 데이터베이스로 사용하고 싶습니다

56
00:03:49,180 --> 00:03:55,296
프론트엔드에는 자바스크립트,
HTML, CSS와 Tailwind를 쓸게요

57
00:03:55,320 --> 00:03:58,780
이제 여기서 엔터를 누르면, 수많은 파일을 생성합니다

58
00:03:58,840 --> 00:04:02,297
모든 작업을 다 할 수는 없어서 몇 가지 지침만 제공합니다

59
00:04:02,321 --> 00:04:07,176
터미널 명령 실행 같은 건 직접 해야 하지만,
대부분의 애플리케이션을 생성할 수 있습니다

60
00:04:07,200 --> 00:04:12,540
잘 보이도록 화면을 조금 축소해 보겠습니다

61
00:04:12,800 --> 00:04:13,980
이제 여기로 돌아가자

62
00:04:14,420 --> 00:04:19,297
서버, 인덱스, 스타일,
스크립트가 생성되는 것을 볼 수 있죠

63
00:04:19,321 --> 00:04:25,006
완료될 때까지 기다린 다음,
변경 사항을 앱에 적용해 볼게요

64
00:04:25,030 --> 00:04:27,780
좋아요, 완료되었습니다

65
00:04:27,960 --> 00:04:33,920
이제 모든 파일을 볼 수 있고, 수정을
요청하거나 원하는 대로 변경할 수 있습니다

66
00:04:34,060 --> 00:04:38,080
변경 사항을 모두 한 번에
수락하거나 파일별로 수락할 수 있어요

67
00:04:38,160 --> 00:04:43,281
모두 수락하면 깃허브 풀 리퀘스트 같은 방식으로 진행됩니다

68
00:04:43,420 --> 00:04:47,216
파일이 생성되는 것을 볼 수 있죠
이제 작성기 뷰에서 벗어나겠습니다

69
00:04:47,240 --> 00:04:50,820
인덱스, 스크립트, 스타일, 서버 파일이 생성되었습니다

70
00:04:50,960 --> 00:04:55,077
작성기는 파일을 생성하는 데 매우 유용한 기능입니다

71
00:04:55,101 --> 00:05:00,360
더 큰 기능도 많이 있지만,
가끔은 너무 많을 수도 있습니다

72
00:05:00,420 --> 00:05:03,640
코드 검토도 어려울 수 있어서,
제가 자주 사용하는 다음 기능을 보여드릴게요

73
00:05:03,760 --> 00:05:08,679
바로 일반 채팅 기능입니다
정확히 뭐라고 부르는지는 모르겠지만요

74
00:05:08,703 --> 00:05:10,660
보기라고 해야 할까요? 잘 모르겠네요

75
00:05:10,700 --> 00:05:14,980
Ctrl I 또는 Command I를 누르면
채팅으로 들어갈 수 있습니다

76
00:05:15,120 --> 00:05:18,260
여기서는 코딩 관련 질문 외에도

77
00:05:18,480 --> 00:05:22,040
코드 베이스 전체 컨텍스트에 접근할 수 있습니다

78
00:05:22,180 --> 00:05:29,320
특정 파일에 대해 물어보거나, 컨텍스트를 지정할
수 있습니다 추가를 눌러 파일을 추가해 보세요

79
00:05:29,344 --> 00:05:34,269
파일에 대해 질문하고 싶다면
서버 파일을 여기에 넣으면 됩니다

80
00:05:34,293 --> 00:05:36,440
서버 파일에 대해 질문하려면 여기에 서버를 넣으면 됩니다

81
00:05:36,540 --> 00:05:43,520
웹 검색, 이미지 제공, 다른 문서 링크 등도 가능합니다

82
00:05:43,880 --> 00:05:51,240
앱 멘션에서 PDF 파일, 폴더,
웹 문서 등 많은 옵션이 있어요

83
00:05:51,340 --> 00:05:54,600
컨텍스트를 많이 제공할수록
더 나은 결과를 얻을 수 있습니다

84
00:05:54,820 --> 00:06:01,400
특정 파일을 언급하거나 웹 사이트를
언급하여 컨텍스트를 추가해 보세요

85
00:06:01,520 --> 00:06:09,520
새로운 기능이나 프레임워크가 있다면, 문서 링크를
제공하고 읽게 한 다음 응답을 생성할 수 있습니다

86
00:06:10,880 --> 00:06:14,956
이제 서버 내부에서 무언가를 하고 싶다고 가정해 봅시다

87
00:06:14,980 --> 00:06:18,736
서버에 레시피를 추가하고 싶다고 말해볼 수도 있겠죠

88
00:06:18,760 --> 00:06:20,960
좋아요. 좋습니다

89
00:06:21,740 --> 00:06:28,260
새로운 레시피를 추가해 주세요
좀 더 독특하게 만들어 주세요

90
00:06:28,920 --> 00:06:31,320
엔터를 누르고 어떤 결과가 나오는지 살펴봅시다

91
00:06:31,560 --> 00:06:32,980
여기에 코드가 있습니다

92
00:06:33,100 --> 00:06:37,420
코드를 복사하거나, 적용을
눌러 파일 내부를 변경할 수 있습니다

93
00:06:37,520 --> 00:06:40,280
실제로 파일 내부가 달라집니다

94
00:06:40,380 --> 00:06:44,880
어디에 추가할지 정확히 보여줍니다
이것은 ChatGPT와는 완전히 달라요

95
00:06:45,000 --> 00:06:53,000
기존 코드에 주석을 달거나 샘플 데이터를 삽입하는
것과는 달리, 파일에 복사해서 붙여넣을 필요가 없습니다

96
00:06:57,080 --> 00:07:00,860
여기서 이렇게 하면 바로 적용할 수 있습니다

97
00:07:00,960 --> 00:07:04,500
이제 더 많은 레시피가 추가된 것을 볼 수 있죠

98
00:07:04,580 --> 00:07:09,300
만약 마음에 안 들면, 묻기
버튼으로 바로 답장할 수 있습니다

99
00:07:09,520 --> 00:07:15,920
특정 응답을 참조하여 "이 레시피로 바꿔주세요"라고
말하면 컨텍스트를 바로 주입할 수 있습니다

100
00:07:15,980 --> 00:07:21,407
코딩할 때 컨텍스트는 매우 중요합니다.
정보를 많이 제공할수록 좋습니다

101
00:07:21,431 --> 00:07:24,500
가능한 한 많은 정보를 제공하고 싶을 것입니다

102
00:07:24,860 --> 00:07:27,680
그래야 최고의 답변을 얻을
수 있습니다. 이것이 채팅 창입니다

103
00:07:27,860 --> 00:07:28,920
꽤 직관적이죠? 다음으로 넘어가겠습니다

104
00:07:29,040 --> 00:07:32,836
문맥을 언급하거나, 채팅 모델을
선택하고, 문서를 연결할 수 있습니다

105
00:07:32,860 --> 00:07:36,706
코드를 검색하는 기능도 있습니다
엔터를 누르거나 버튼을 눌러

106
00:07:36,730 --> 00:07:42,797
기본 채팅을 할 수 있지만, "내 레시피가 어디에
정의되어 있나요?" 처럼 물어볼 수도 있습니다

107
00:07:42,821 --> 00:07:48,260
특정 코드를 찾고 있다면 탐색하기 어려울 수 있는데

108
00:07:48,560 --> 00:07:55,532
이 버튼을 누르면 전체 코드베이스를 검색합니다.
컨트롤+입력이나 명령+입력을 사용할 수도 있습니다

109
00:07:55,556 --> 00:08:00,980
큰 코드 베이스에서 더 효과적이지만, 이제
위치를 알려주고 다른 변수와 파일 링크를 제공합니다

110
00:08:01,220 --> 00:08:09,060
이 링크를 클릭하면 정확한 위치로 이동할 수 있습니다

111
00:08:09,140 --> 00:08:16,580
샘플 레시피로 이동하면 해당 변수로 이동하고,
파란색으로 표시된 건 클릭할 수 있습니다

112
00:08:16,760 --> 00:08:22,060
코드 베이스를 쉽게 탐색할 수 있다는 게 장점입니다

113
00:08:22,120 --> 00:08:23,160
좋아요, 채팅창은 이렇습니다

114
00:08:23,200 --> 00:08:29,260
컨텍스트와 관련된 많은 일을 할 수 있습니다.
이제 인라인 완성에 대해 이야기해 보겠습니다

115
00:08:29,460 --> 00:08:33,740
코드를 입력하는 동안 직접 편집하고 싶을 때 유용합니다

116
00:08:34,060 --> 00:08:40,700
Index. Html로 가서 선택 상자를
추가하고 싶다고 가정해 봅시다

117
00:08:41,220 --> 00:08:48,660
'선택'이라고 입력하면 매우 긴 자동 완성이 표시됩니다 탭을
눌러 자동 완성할 수 있고, 엔터를 눌러 안으로 들어갈 수도 있습니다

118
00:08:48,700 --> 00:08:52,822
이미 여러 가지 옵션이 제공되죠 이를
사용해 코드를 더 빨리 생성할 수 있습니다

119
00:08:52,846 --> 00:08:56,300
이를 사용하여 코드를 훨씬 빠르게 생성할 수 있습니다

120
00:08:56,440 --> 00:08:59,976
제가 가지고 있던 것과 같지만,
시간 선택으로 변경할 수 있습니다

121
00:09:00,000 --> 00:09:07,560
기분 선택보다는 시간으로 바꾸면 옵션이
생깁니다 여기서 아침, 점심, 저녁을 입력해 볼게요

122
00:09:07,740 --> 00:09:12,560
탭을 누르면 코드를 쉽게
추가할 수 있다는 것을 알 수 있죠

123
00:09:12,980 --> 00:09:13,380
Okay

124
00:09:13,520 --> 00:09:16,140
여기서 탭을 제대로 눌러보겠습니다

125
00:09:16,480 --> 00:09:19,520
이걸 안에 넣을 수 있다는 것을 알 수 있습니다

126
00:09:19,640 --> 00:09:23,020
이제 이 코드 블록을 수정하고 싶다고 가정해 봅시다

127
00:09:23,120 --> 00:09:31,120
이 부분을 강조 표시하면, 채팅(Ctrl I)이나
인라인 편집기(Ctrl K)를 사용할 수 있습니다.

128
00:09:32,680 --> 00:09:38,660
Ctrl K를 누르면 이걸로 무엇을 할지
지시할 수 있습니다 삭제하라고 할 수도 있죠

129
00:09:39,500 --> 00:09:45,940
그 이유를 모르겠지만, 차이를
보여주고 수락하거나 거부할 수 있습니다

130
00:09:46,060 --> 00:09:53,360
더 자세한 옵션을 추가하고 싶다면,
이 옵션을 선택해 보겠습니다

131
00:09:53,460 --> 00:09:56,714
다시 차이점을 확인해보세요

132
00:09:56,738 --> 00:10:00,500
이른 아침, 아침, 점심 등이 추가된
것을 볼 수 있습니다 수락하겠습니다

133
00:10:00,580 --> 00:10:01,360
여기까지입니다

134
00:10:01,440 --> 00:10:02,700
이제 선택지가 생겼습니다

135
00:10:02,780 --> 00:10:09,296
정리하자면, 파일을 대량으로 생성하려면 작성 기능을
사용합니다 새 파일을 만들거나 큰 기능 변경 시 유용해요

136
00:10:09,320 --> 00:10:11,580
코드의 많은 영역을 건드리게 될 거예요

137
00:10:11,620 --> 00:10:17,800
Ctrl I나 Command I로 작곡기를 열어 파일을
읽고, 깃허브 풀 리퀘스트처럼 변경할 수 있습니다

138
00:10:17,900 --> 00:10:24,160
새 작곡기를 만들거나 기존 작곡기를 사용할
수도 있습니다 변경 사항을 적용할 수도 있습니다

139
00:10:24,240 --> 00:10:32,200
작은 범위의 수정이 필요하면 코드 줄을 선택하고
Ctrl K를 누르세요 인라인 편집기가 열립니다

140
00:10:32,380 --> 00:10:38,600
코드를 변경할 수 있는 다른 창이 열립니다.
바로 코드 줄에서 빠르게 변경할 수 있습니다

141
00:10:38,740 --> 00:10:42,980
원하는 것을 정확히 알고 있을 때
편집기를 사용하는 것과 같습니다

142
00:10:43,100 --> 00:10:49,640
코드 변경과 관련이 없는 중간
정도의 작업이라면 채팅 창을 여세요

143
00:10:49,740 --> 00:10:52,380
여기서 원하는 것을 물어볼 수 있습니다

144
00:10:52,500 --> 00:10:58,340
변경 사항을 추천하고 직접 적용할 수
있으며, 코드 설명을 요청할 수도 있습니다

145
00:10:58,560 --> 00:11:05,880
코드를 복사하여 붙여 넣으면,
컨텍스트가 자동으로 추가됩니다

146
00:11:06,020 --> 00:11:12,782
"이 코드를 설명해 주실 수 있나요?"
물어보면, 설명해 줍니다

147
00:11:12,806 --> 00:11:16,620
채팅창에서는 변경을 할 수
없지만 더 많은 기능을 제공합니다

148
00:11:16,860 --> 00:11:23,560
인라인 편집기에서는 코드 섹션을 수정할
수 있습니다 더욱 타겟팅된 접근 방식이죠

149
00:11:23,600 --> 00:11:26,334
마지막으로 보여드릴 기능은 이미지를
사용하여 코드를 생성하는 방법입니다

150
00:11:26,358 --> 00:11:29,380
이미지를 사용하여 코드를 생성할 수 있습니다

151
00:11:29,500 --> 00:11:30,720
한번 해보도록 하겠습니다

152
00:11:30,800 --> 00:11:35,280
웹에서 간단한 로그인 양식 이미지를 가져왔습니다

153
00:11:35,320 --> 00:11:43,320
원래는 피그마 파일 등을 사용하겠지만, 이미지를
기반으로 코드를 생성하도록 할 수 있다는 겁니다

154
00:11:44,460 --> 00:11:46,700
이미지를 선택하고 시작해 보겠습니다

155
00:11:46,760 --> 00:11:51,096
여기 있는 것 같네요 보일 겁니다

156
00:11:51,120 --> 00:11:56,860
이 양식이 포함된 새 HTML 파일을 만들어주세요

157
00:11:57,140 --> 00:12:02,056
Tailwind CSS를 사용해서
만들어주세요 어떻게 되는지 봅시다.

158
00:12:02,080 --> 00:12:09,120
HTML이 생성되었는데, 적용을 누르면
index. Html에 적용됩니다 새 파일이 필요합니다

159
00:12:09,180 --> 00:12:16,600
채팅에서는 새 파일을 만들지 않는
경우가 많아요 직접 만들어야 합니다

160
00:12:16,840 --> 00:12:21,480
Form. Html이라는 파일을 만들게요
이제 이걸 적용해 보겠습니다

161
00:12:21,940 --> 00:12:23,576
취소를 누르고 양식으로 돌아갈게요

162
00:12:23,600 --> 00:12:31,600
Form. Html을 열면, 기본적으로 그 양식을 사용하게
설정됩니다 신청 알림에 form. Html이 표시됩니다

163
00:12:32,901 --> 00:12:35,540
수락하면 됩니다

164
00:12:35,620 --> 00:12:39,760
Ctrl+Shift+Y를 눌러서 수락하고,
어떻게 생겼는지 확인해 봅시다

165
00:12:39,840 --> 00:12:44,920
파일 탐색기에서 양식을 열어보겠습니다

166
00:12:45,080 --> 00:12:49,500
만들어진 것을 보니 꽤 인상적입니다

167
00:12:49,600 --> 00:12:52,920
다시 이미지로 돌아가서 이렇게 될 줄은 몰랐습니다

168
00:12:53,060 --> 00:12:58,080
이미지를 다시 열어볼게요 이것이
이미지이고, 이것이 우리가 얻은 결과입니다

169
00:12:58,120 --> 00:12:58,280
그렇군요

170
00:12:58,360 --> 00:13:04,220
간격에 문제가 좀 있지만, 이렇게
대각선으로 줄이 채워진 건 예상 못했어요

171
00:13:04,460 --> 00:13:04,820
Yes

172
00:13:04,920 --> 00:13:09,920
패딩과 글꼴에 문제가 있지만,
대체로 비슷하네요 음, 꽤 인상적입니다

173
00:13:10,020 --> 00:13:13,660
이렇게 좋은 결과가 나올 줄은 예상 못했어요

174
00:13:13,800 --> 00:13:18,740
전반적으로 커서는 꽤 멋지고, 생산성을 확실히 높여줍니다

175
00:13:19,140 --> 00:13:25,100
코딩 방법을 알고 있기 때문에
효과적으로 사용할 수 있습니다

176
00:13:25,200 --> 00:13:33,180
초보자도 사용할 수 있지만, 막히면
AI가 고쳐주지 않으면 힘들 수 있습니다

177
00:13:33,400 --> 00:13:38,760
AI가 무엇이 잘못되었는지 알아내서
고치려고 하면 정말 악몽 같습니다

178
00:13:38,880 --> 00:13:43,120
직접 뛰어들어 변화를 만들어야 할 때가 많을 겁니다

179
00:13:43,340 --> 00:13:50,197
코딩, 데이터 과학, 머신러닝에 대해 더 자세히 알고
싶다면, 오늘 영상 스폰서인 브릴리언트를 확인해 보세요

180
00:13:50,221 --> 00:13:55,976
새롭게 떠오르는 모든 분야에 도움을 줄 겁니다. 브릴리언트는
수학, 데이터 분석, 프로그래밍 및 AI 수업을 제공합니다

181
00:13:56,000 --> 00:14:04,000
첫 번째 원칙 접근 방식을 사용하여 각 개념 뒤에 숨은 이유를
이해하도록 돕습니다 모든 수업은 대화형이고 실습 문제 해결을 제공합니다

182
00:14:08,440 --> 00:14:16,040
강의를 보기만 하는 것보다 6배 더 효과적이라는 것이
입증되었습니다. 최고 수준의 교육자, 연구자들이 콘텐츠를 개발했죠

183
00:14:16,300 --> 00:14:24,237
MIT, Caltech, Google과 같은 기관에서 개발되었습니다 브릴리언트는
비판적 사고력을 강조하며, 암기보다 능동적인 문제 해결을 통해 배우게 합니다

184
00:14:24,261 --> 00:14:32,261
특정 과목을 배우는 동시에 더 효과적으로 생각할 수 있도록
정신을 훈련합니다. 매일 꾸준히 학습하는 것이 중요합니다

185
00:14:35,640 --> 00:14:43,640
브릴리언트는 한입 크기의 수업으로 몇 분 안에 의미 있는
지식을 얻을 수 있도록 도와줍니다 유휴 시간을 활용하기에 좋죠

186
00:14:47,900 --> 00:14:55,900
또한 브릴리언트는 컴퓨터 과학 및 파이썬 과정과 AI 워크샵을
제공합니다. 초보자부터 전문가까지 실용적인 실습 강의를 제공합니다

187
00:14:59,600 --> 00:15:07,600
다음 링크에서 30일 동안 브릴리언트의 모든 것을 무료로 체험해 보세요. Brilliant.org
또는 설명에 있는 링크를 클릭하세요 연간 프리미엄 구독 20% 할인도 받을 수 있습니다

